{"version":3,"sources":["components/Slider/Slider.js","helpers/getDaySpread.js","components/TimeAxis/TimeAxis.js","hooks/useMousePosition.js","components/TaskHandle/TaskHandle.js","constants/constants.js","components/DragDependency/DragDependency.js","components/Task/Task.js","components/EmptyTask/EmptyTask.js","hooks/useKeyPress.js","components/TaskCreator/TaskCreator.js","components/EditTaskPanel/EditTaskPanel.js","components/DragDependencyBox/DragDependencyBox.js","components/Timeline/Timeline.js","components/Spinner/Spinner.js","helpers/getStoreWithRow.js","store/LocalStore.js","components/RegisterStore/RegisterStore.js","store/useStore.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["Slider","previous","next","_","className","onClick","e","preventDefault","stopPropagation","getDaySpread","dateA","dateB","fromDate","Date","toDate","setUTCHours","setUTCMinutes","setUTCSeconds","setUTCMilliseconds","Math","floor","getTime","MONTH_MAP","TimeAxis","topOrigin","leftOrigin","maxSpread","dayWidth","dayOrigin","height","months","dates","today","weekends","Array","fill","forEach","item","i","currentDay","push","getDay","style","top","left","width","getDate","getMonth","listeningCounter","eventTargets","listenTargets","positionHandler","clientX","clientY","updatePositionEvent","CustomEvent","detail","x","y","Object","values","dispatchEvent","mouseUpHandler","localMouseUpEvent","Event","keys","key","useMousePosition","targetKey","EventTarget","useState","offset","setOffset","memoizedUpdatePositionHandler","useCallback","touchPoint","memoizedMouseUpHandler","undefined","useEffect","window","addEventListener","removeEventListener","console","log","isListening","TaskHandle","handleKey","updateTaskHandle","isLeft","setIsListening","onMouseDown","DragDependency","originAnchor","handleMouseDown","positionStyle","bottom","DRAG_SIZE","Task","name","absoluteTop","absoluteLeft","paddingLeft","taskKey","updateTask","launchEditTaskObject","setIsDrag","askForDependencyIfDrag","displayDragDependencies","setDisplayDragDependencies","updateTaskHandleSide","side","id","onMouseEnter","onMouseLeave","onMouseUp","EmptyTask","setName","inputRef","useRef","current","focus","ref","value","onChange","target","type","placeholder","useKeyPress","keyPressed","setKeyPressed","memoizedDownHandler","memoizedUpHandler","TaskCreator","taskHeigh","createTask","enterPressed","offsetX","nativeEvent","offsetY","column","row","tabIndex","EditTaskPanel","taskObject","editTaskObject","Id","Name","DragDependencyBox","positionX","positionY","Timeline","mouseEvent","store","editStoreTask","emptyTask","setEmptyTask","editedTask","setEditedTask","isEditTaskPanelOpen","setIsEditTaskPanelOpen","dragX","dragY","isDrag","from","to","dependencyCouple","setDependencyCouple","timelineMap","localStoreMapInfo","tasks","dependencies","handleIsDragBy","taskId","origin","findTask","localTask","length","placeTask","Template","fromId","dayOffset","StartDate","spread","DueDate","min","args","updateLocalTask","validateRunningTasks","launchEditLocalTaskObject","taskdId","fromTask","toTaskId","linkedTo","Set","add","handleAskForDependencyIfDrag","toId","start","end","curveness","strokeWidth","now","toString","validateEmptyTask","fromColumn","toColumn","currentRow","localColumn","max","localRow","columnShift","newTaskObject","Spinner","getStoreWithRow","storeWithRow","storeMap","isCollision","j","localStore","a","response","Promise","resolve","reject","result","Items","RegisterStore","registrationOptions","submitOptions","selectedOption","setSelectionOption","options","setOptions","optionsToSelect","entries","map","label","onSubmit","newSelectedOption","params","htmlFor","required","handleChange","href","rel","information","fetch","apiEndpoint","method","body","JSON","stringify","action","json","toISOString","storeFunctions","storeInformation","useStore","registrationInformation","setRegistrationInformation","setStore","localUpdateStoreWith","setLocalUpdateStoreWith","storeType","isMounted","then","data","catch","err","error","update","hasToRegister","registrationComponent","App","setUpdateStoreWith","registration","setFromDate","windowWidth","innerWidth","task","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f572bba5.chunk.js","sourcesContent":["// TODO: Center text vertically\n// TODO: CHange layout to add transparent padding\n\nimport './Slider.css';\n\nfunction Slider({previous, next}) {\n  previous = previous ?? ((_) => (undefined));\n  next = next ?? ((_) => (undefined));\n  \n  function previousDate(e) {\n    e.preventDefault();\n    e.stopPropagation();\n\n    previous();\n  };\n\n  function nextDate(e) {\n    e.preventDefault();\n    e.stopPropagation();\n\n    next();\n  };\n\n  return (\n    <div className=\"Slider\">\n      <button\n        onClick={previousDate}\n      >\n      <i className=\"arrow left\" />\n      </button>\n      <button\n        onClick={nextDate}\n      >\n      <i className=\"arrow right\" />\n      </button>\n    </div>\n  );\n}\n\nexport default Slider;\n","// TODO: More resiliant day spread calculator for multiple timezone and change in day time\nfunction getDaySpread(dateA, dateB) {\n  const fromDate = new Date(dateA);\n  const toDate = new Date(dateB);\n  fromDate.setUTCHours(0);\n  fromDate.setUTCMinutes(0);\n  fromDate.setUTCSeconds(0);\n  fromDate.setUTCMilliseconds(0);\n\n  toDate.setUTCHours(0);\n  toDate.setUTCMinutes(0);\n  toDate.setUTCSeconds(0);\n  toDate.setUTCMilliseconds(0);\n  return Math.floor((toDate.getTime() - fromDate.getTime()) / 86400000);\n};\n\nexport default getDaySpread;\n","import './TimeAxis.css';\n\nimport getDaySpread from \"../../helpers/getDaySpread\";\n\nconst MONTH_MAP = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\",\n]\n\nfunction TimeAxis({topOrigin, leftOrigin, maxSpread, dayWidth, dayOrigin, height}) {\n  const months = [];\n  const dates = [];\n  const today = [];\n  const weekends = [];\n\n  Array(maxSpread + 1).fill(0).forEach((item, i) => {\n    i -= 1; // Start one day earlier to catch Sunday weekend strip\n    // Get Date\n    const currentDay = new Date(dayOrigin.getTime() + i * 86400000)\n\n    // Add Date\n    dates.push(\n      <div\n        key={`date-${i}`}\n        className={`time${(currentDay.getDay() === 5 || currentDay.getDay() === 6) ? \" weekendday\" : \"\"}`}\n        style={{\n          top: topOrigin + height,\n          left: leftOrigin + dayWidth * i,\n          width: dayWidth,\n          height: height,\n        }}>\n        {currentDay.getDate()}\n      </div>\n    );\n\n    // Add today if today\n    if (getDaySpread(currentDay, new Date()) === 0) {\n      today.push(\n        <div\n          key={`todaymarker-${i}`}\n          className=\"todaymarker\"\n          style={{\n            top: topOrigin + 2 * height,\n            left: leftOrigin + dayWidth * i + dayWidth / 2,\n          }}\n        />\n      );\n\n      today.push(\n        <div\n          key={`todaystrip-${i}`}\n          className=\"todaystrip\"\n          style={{\n            top: topOrigin + 2 * height,\n            left: leftOrigin + dayWidth * i + dayWidth / 2,\n          }}\n        />\n      );\n    };\n\n    // Add weekends (if Saturday -5-)\n    if (currentDay.getDay() === 5) {\n      weekends.push(\n        <div\n          key={`weekends-${i}`}\n          className=\"weekend\"\n          style={{\n            top: topOrigin + height,\n            left: leftOrigin + dayWidth * i,\n            width: 2 * dayWidth,\n          }}\n        />\n      )\n    }\n\n    // Add Month\n    if (i === 0 || currentDay.getDate() === 1) {\n      months.push(\n        <div\n          key={`month-${i}`}\n          className=\"month\"\n          style={{\n            top: topOrigin,\n            left: leftOrigin + dayWidth * i,\n            height: height,\n          }}>\n          {MONTH_MAP[currentDay.getMonth()]}\n        </div>\n      );\n    }\n  });\n\n  return (\n    <div className=\"TimeAxis\">\n      <div\n        className=\"timebackground\"\n        style={{\n          top: topOrigin + 2 * height,\n          left: leftOrigin,\n        }}\n      />\n      {weekends}\n      {months}\n      {dates}\n      {today}\n    </div>\n  );\n}\n\nexport default TimeAxis;\n","// TODO: Optmise handler to not update at every frame\n\nimport { useState, useEffect, useCallback } from \"react\";\n\n// import {\n//   MINIMUM_SQUARED_DETECTION_RADIUS\n// } from \"../constants/constants\"\n\nlet listeningCounter = 0;\nconst eventTargets = {};\nconst listenTargets = {};\n\nfunction positionHandler({clientX, clientY}) {\n  const updatePositionEvent = new CustomEvent(\"updateposition\", {detail: {x: clientX, y: clientY}})\n  Object.values(eventTargets).forEach((item, _) => {\n    item.dispatchEvent(updatePositionEvent);\n  });\n};\n\nfunction mouseUpHandler() {\n  const localMouseUpEvent = new Event(\"localmouseup\")\n  Object.keys(listenTargets).forEach((key, _) => {\n    listenTargets[key] = false;\n  });\n  Object.values(eventTargets).forEach((item, _) => {\n    item.dispatchEvent(localMouseUpEvent);\n  });\n};\n\n// function squaredDistance(pointA, pointB) {\n//   return ((pointA[0] - pointB[0]) ** 2 + (pointA[1] - pointB[1]) ** 2)\n// }\n\nfunction useMousePosition(targetKey) {\n  eventTargets[targetKey] = eventTargets[targetKey] ?? new EventTarget();\n  listenTargets[targetKey] = listenTargets[targetKey] ?? false;\n\n  // console.table(listenTargets);\n\n  const [offset, setOffset] = useState([0, 0]);\n\n  function setIsListening(isListening) {\n    listenTargets[targetKey] = isListening;\n  }\n\n  const memoizedUpdatePositionHandler = useCallback(\n    (e) => {\n      const touchPoint = [e.detail.x, e.detail.y]\n      if (listenTargets[targetKey]) {\n        setOffset(touchPoint);\n      };\n    },\n    [targetKey],\n  );\n\n  const memoizedMouseUpHandler = useCallback(\n    (e) => {\n      setOffset([undefined, undefined]);\n    },\n    [],\n  );\n\n  useEffect(() => {\n    // Attach global listener to window\n    if (listeningCounter === 0) {\n      window.addEventListener(\"mousemove\", positionHandler);\n      window.addEventListener(\"mouseup\", mouseUpHandler);\n    };\n    // Send update to local listener if any\n    eventTargets[targetKey].addEventListener(\"updateposition\", memoizedUpdatePositionHandler);\n    eventTargets[targetKey].addEventListener(\"localmouseup\", memoizedMouseUpHandler);\n\n    listeningCounter += 1; // How many component are listening to mouse position\n    return () => {\n      // Remove update to local listener if any\n      eventTargets[targetKey].removeEventListener(\"updateposition\", memoizedUpdatePositionHandler);\n      eventTargets[targetKey].removeEventListener(\"localmouseup\", memoizedMouseUpHandler);\n\n      listeningCounter -= 1; // How many component are listening to mouse position\n\n      // Detach global listener to window\n      if (listeningCounter === 0) {\n        window.removeEventListener(\"mousemove\", positionHandler);\n        window.removeEventListener(\"mouseup\", mouseUpHandler);\n      };\n    };\n  }, [targetKey, memoizedUpdatePositionHandler, memoizedMouseUpHandler]);\n\n  if (targetKey===\"task1:drag\") {\n    console.log(listenTargets[targetKey],  offset[0],  offset[1] )\n  }\n  return [\n    listenTargets[targetKey] ? offset[0] : undefined,\n    listenTargets[targetKey] ? offset[1] : undefined,\n    listenTargets[targetKey],\n    setIsListening,\n  ];\n}\n\nexport default useMousePosition;\n","import { useEffect } from \"react\";\n\nimport useMousePosition from \"../../hooks/useMousePosition\";\n\nimport './TaskHandle.css';\n\nfunction TaskHandle({width, height, handleKey, updateTaskHandle, isLeft}) {\n  const [clientX, , , setIsListening] = useMousePosition(handleKey);\n  function handleMouseDown(e) {\n    setIsListening(true);\n  };\n\n  useEffect(() => {\n    updateTaskHandle(clientX)\n  }, [clientX, updateTaskHandle]);\n\n  return (\n    <div\n      onMouseDown={handleMouseDown}\n      className={`TaskHandle ${isLeft ? \"handleleft\" : \"handleright\"}`}\n      style={{\n        height: height,\n      }}\n    >\n    </div>\n  );\n}\n\nexport default TaskHandle;\n","// TODO: To be set dynamically\n\n// Constant in pixel\n\n// For App\nexport const DAY_WIDTH = 64;\nexport const TASK_HEIGHT = 34;\n\n// For Timeline\nexport const EMPTY_TASK_MAX_SPREAD = 5;\nexport const DEPTH_LIMIT = 100;\n\n// For useMousePosition (don't work, maximum death update when trying to reduce the number of update ...)\nexport const MINIMUM_SQUARED_DETECTION_RADIUS = 100 ** 2;\n\n// For DragDependency\nexport const DRAG_SIZE = 20;\n","import \"./DragDependency.css\";\n\nimport {\n  DRAG_SIZE,\n} from \"../../constants/constants\";\n\nfunction DragDependency({originAnchor, width, height, handleMouseDown}) {\n  const positionStyle = {\n    width: DRAG_SIZE,\n    height: DRAG_SIZE,\n    bottom: height - DRAG_SIZE * 0.1,\n  }\n\n  if (originAnchor) {\n    positionStyle.top = positionStyle.bottom;\n    positionStyle.bottom = undefined;\n    positionStyle.left = width - DRAG_SIZE;\n  };\n\n  return (\n    <div\n      onMouseDown={handleMouseDown}\n      className=\"DragDependency\"\n      style={positionStyle}\n    />\n  )\n}\n\nexport default DragDependency\n","// TODO: Center text vertically\n// TODO: Change layout to add transparent padding\n\nimport { useState, useEffect } from \"react\";\n\nimport TaskHandle from \"../TaskHandle/TaskHandle\";\nimport DragDependency from \"../DragDependency/DragDependency\";\n\nimport useMousePosition from \"../../hooks/useMousePosition\";\n\nimport './Task.css';\n\nfunction Task({name, absoluteTop, absoluteLeft, width, height, paddingLeft, taskKey, updateTask, launchEditTaskObject, setIsDrag, askForDependencyIfDrag}) {\n  const [clientX, clientY, isListening, setIsListening] = useMousePosition(taskKey);\n\n  const [displayDragDependencies, setDisplayDragDependencies] = useState(false);\n\n  function handleMouseDown(e) {\n    setDisplayDragDependencies(false);\n    setIsListening(true);\n  };\n\n  function handleMouseDownDragDependencyFrom(e) {\n    setIsDrag(\"from\");\n  };\n\n  function handleMouseDownDragDependencyTo(e) {\n    setIsDrag(\"to\");\n  };\n\n  function handleMouseEnter(e) {\n    console.log(\"Mouse Enter\", name, \"Is Listening?\", isListening)\n    if (isListening) {\n      return;\n    };\n    setDisplayDragDependencies(true);\n  };\n\n  function handleMouseLeave(e) {\n    if (isListening) {\n      return;\n    };\n    setDisplayDragDependencies(false);\n  };\n\n  function handleMouseUp(e) {\n    askForDependencyIfDrag()\n  }\n\n  function updateTaskHandleSide(side, clientX) {\n    updateTask(side, clientX, 0);\n  };\n\n  function handleClick(e) {\n    // e.preventDefault();\n    // e.stopPropagation();\n\n    launchEditTaskObject();\n  }\n\n  useEffect(() => {\n    updateTask(\"all\", clientX, clientY);\n  }, [clientX, clientY, updateTask])\n\n  return (\n    <div\n      id={taskKey}\n      className=\"Task\"\n      onClick={handleClick}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      onMouseUp={handleMouseUp}\n      style={{\n        top: absoluteTop,\n        left: absoluteLeft,\n        width: width,\n        height: height,\n      }}\n    >\n      <TaskHandle\n        isLeft\n        handleKey={`${taskKey}:left`}\n        width={10}\n        height={height}\n        updateTaskHandle={(clientX) => (updateTaskHandleSide(\"left\", clientX))}\n      />\n      <div\n        className=\"text-container\"\n        onMouseDown={handleMouseDown}\n        style={{\n          \"padding-left\": paddingLeft, // NOTE: Trigger an error for no reason\n        }}\n      >\n      {name}\n      </div>\n      {displayDragDependencies && (\n        <>\n          <DragDependency\n            originAnchor\n            width={width}\n            height={height}\n            handleMouseDown={handleMouseDownDragDependencyFrom}\n          />\n          <DragDependency\n            width={width}\n            height={height}\n            handleMouseDown={handleMouseDownDragDependencyTo}\n          />\n        </>\n      )}\n      <TaskHandle\n        handleKey={`${taskKey}:right`}\n        width={10}\n        height={height}\n        updateTaskHandle={(clientX) => (updateTaskHandleSide(\"right\", clientX))}\n      />\n    </div>\n  );\n}\n\nexport default Task;\n","import { useRef, useEffect } from \"react\";\n\nimport './EmptyTask.css';\n\nfunction EmptyTask({name, absoluteTop, absoluteLeft, width, height, paddingLeft, setName}) {\n  const inputRef = useRef(null);\n\n  function handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  function handleChange(e) {\n    e.preventDefault();\n    e.stopPropagation();\n\n    setName(e.target.value);\n  };\n\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  return (\n    <div\n      className=\"Task EmptyTask\"\n      onClick={handleClick}\n      style={{\n        top: absoluteTop,\n        left: absoluteLeft,\n        width: width,\n        height: height,\n        \"padding-left\": paddingLeft,\n      }}\n    >\n      <input\n        className=\"emptytaskname\"\n        ref={inputRef}\n        value={name}\n        onChange={handleChange}\n        type=\"text\"\n        placeholder=\"Write a task name\"\n      />\n    </div>\n  );\n}\n\nexport default EmptyTask;\n","import { useState, useEffect, useCallback } from \"react\";\n\nfunction useKeyPress(targetKey) {\n  // State for keeping track of wether key is pressed\n  const [keyPressed, setKeyPressed] = useState(false);\n  // If pressed key is our target key then set to true\n  const memoizedDownHandler = useCallback(\n    ({key}) => {\n      if (key === targetKey) {\n        setKeyPressed(true);\n      };\n    },\n    [targetKey]\n  );\n  // If released key is out target key then set to false\n  const memoizedUpHandler = useCallback(\n    ({key}) => {\n      if (key === targetKey) {\n        setKeyPressed(false);\n      };\n    },\n    [targetKey]\n  );\n  // Add event listener\n  useEffect(() => {\n    window.addEventListener(\"keydown\", memoizedDownHandler);\n    window.addEventListener(\"keyup\", memoizedUpHandler);\n    // Remove event listeners on cleanup\n    return () => {\n      window.removeEventListener(\"keydown\", memoizedDownHandler);\n      window.removeEventListener(\"keyup\", memoizedUpHandler);\n    };\n  }, [memoizedDownHandler, memoizedUpHandler]); // Empty array ensures that effects is only run on mount and unmount\n  return keyPressed;\n};\n\nexport default useKeyPress;\n","import { useEffect } from \"react\";\n\nimport './TaskCreator.css';\n\nimport useKeyPress from \"../../hooks/useKeyPress\";\n\nfunction TaskCreator({absoluteTop, absoluteLeft, width, height, dayWidth, taskHeigh, createTask}) {\n  const enterPressed = useKeyPress(\"Enter\")\n\n  function handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n\n    const offsetX = e.nativeEvent.offsetX;\n    const offsetY = e.nativeEvent.offsetY;\n\n    const column = Math.floor(offsetX / dayWidth);\n    const row = Math.floor(offsetY / taskHeigh);\n\n    createTask(column, row)\n  }\n\n  useEffect(() => {\n    if (enterPressed) {\n      createTask()\n    }\n  }, [enterPressed, createTask])\n\n  return (\n    <div\n    className=\"TaskCreator\"\n    onClick={handleClick}\n    tabIndex={0}\n    style={{\n      top: absoluteTop,\n      left: absoluteLeft,\n      width: width,\n      height: height,\n    }}\n    >\n    </div>\n  );\n}\n\nexport default TaskCreator;\n","import './EditTaskPanel.css';\n\nfunction EditTaskPanel({taskObject, editTaskObject}) {\n  function handleMouseUp(e) {\n    e.preventDefault();\n    e.stopPropagation();\n  }\n  function handleNameChange(e) {\n    e.preventDefault();\n    e.stopPropagation();\n\n    editTaskObject({\n      ...taskObject,\n      Name: e.target.value,\n    })\n  }\n\n  return (\n    <div\n      onMouseUp={handleMouseUp}\n      className={`EditTaskPanel${taskObject.Id ? \" visible\" : \"\"}`}\n    >\n      {taskObject.Id && (\n        <input\n          className=\"taskname\"\n          value={taskObject.Name}\n          onChange={handleNameChange}\n          type=\"text\"\n          placeholder=\"Write a task name\"\n        />\n      )}\n    </div>\n  )\n};\n\nexport default EditTaskPanel;\n","import \"./DragDependencyBox.css\";\n\nfunction DragDependencyBox({positionX, positionY}) {\n  if (!positionX || !positionY) {\n    return <></>;\n  }\n  return (\n    <div\n      className=\"DragDependencyBox\"\n      style={{\n        top: positionY,\n        left: positionX,\n      }}\n    />\n  )\n};\n\nexport default DragDependencyBox;\n","// TODO: Anchor point for Timeline with dynamic position\n// TODO: Get Dynamic Window width for TimeAxis (WINDOW_WIDTH)\n// NOTE: Dynamic Constant\nimport { useState } from \"react\";\n\nimport Xarrow from \"react-xarrows\";\n\nimport Task from \"../Task/Task\";\nimport EmptyTask from \"../EmptyTask/EmptyTask\";\nimport TaskCreator from \"../TaskCreator/TaskCreator\";\nimport EditTaskPanel from \"../EditTaskPanel/EditTaskPanel\";\nimport DragDependencyBox from \"../DragDependencyBox/DragDependencyBox\";\n\nimport useMousePosition from \"../../hooks/useMousePosition\";\n\nimport './Timeline.css';\n\nimport {\n  EMPTY_TASK_MAX_SPREAD,\n} from \"../../constants/constants\"\n\n// Functions\nimport getDaySpread from \"../../helpers/getDaySpread\";\n\nfunction Timeline({mouseEvent, fromDate, topOrigin, leftOrigin, maxSpread, dayWidth, taskHeigh, store, editStoreTask}) {\n  editStoreTask = editStoreTask ?? ((_) => (undefined));\n\n  function handleMouseUp() {\n    if (!isEditTaskPanelOpen && editedTask.Id) {\n      validateRunningTasks();\n    };\n  };\n\n  // TODO: Both can be merged\n  const [emptyTask, setEmptyTask] = useState({});\n  const [editedTask, setEditedTask] = useState({});\n\n  const [isEditTaskPanelOpen, setIsEditTaskPanelOpen] = useState(false);\n\n  const [dragX, dragY, isDrag, setIsDrag] = useMousePosition(`dragdependency`);\n  const [dependencyCouple, setDependencyCouple] = useState({from:undefined, to:undefined});\n\n  const dayOrigin = new Date(fromDate.getTime());\n  const timelineMap = {};\n  const localStoreMapInfo = {}\n  const tasks = [];\n  const dependencies = [];\n\n  store.forEach((item, _) => {\n    if (editedTask.Id === item.Id) {\n      placeTask(editedTask, Task);\n    } else {\n      placeTask(item, Task);\n    };\n  });\n  if (emptyTask.StartDate && emptyTask.DueDate) {\n    placeTask(emptyTask, EmptyTask);\n  };\n\n  function handleIsDragBy(taskId, origin) {\n    if (origin !== \"from\" && origin !== \"to\") { // only handle endpoints origin\n      return;\n    };\n\n    setDependencyCouple({\n      ...dependencyCouple,\n      [origin]: taskId\n    });\n    setIsDrag(true)\n  };\n\n  function handleAskForDependencyIfDrag(taskdId) {\n    let fromTask;\n    let toTaskId;\n    if (dependencyCouple.from) { // receive to\n      fromTask = findTask(dependencyCouple.from);\n      toTaskId = taskdId;\n    } else if (dependencyCouple.to) { // receive from\n      fromTask = findTask(taskdId);\n      toTaskId = dependencyCouple.to;\n    }\n\n    if (fromTask && toTaskId && fromTask.Id !== toTaskId) {\n      editStoreTask({\n        ...fromTask,\n        linkedTo: (fromTask.linkedTo ?? new Set()).add(toTaskId)\n      });\n    }\n    setDependencyCouple({from: undefined, to: undefined});\n  }\n\n  function findTask(taskId) {\n    let localTask;\n    if (editedTask.Id === taskId) {\n      localTask = {...editedTask};\n    } else {\n      for (let i = 0; i < store.length; i++) {\n        if (store[i].Id === taskId) {\n          localTask = {...store[i]}\n          break;\n        };\n      };\n    };\n    return localTask;\n  }\n\n  function placeTask(item, Template) {\n    // Get offset and spread\n    const dayOffset = getDaySpread(dayOrigin, item.StartDate);\n    const spread = getDaySpread(item.StartDate, item.DueDate) + 1;\n\n    let row = item.row, column = dayOffset;\n\n    // Populate map\n    for (let i = 0; i < spread; i++) {\n      timelineMap[`${column + i}:${row}`] = item.Id;\n    };\n    localStoreMapInfo[item.Id] = {\n      column: column,\n      row: row,\n      spread: spread,\n    };\n    // Add tasks\n    if (column + spread - 1 >= 0 && column < maxSpread) {\n\n      tasks.push(\n        <Template\n          taskKey={`Task-${item.Id}`}\n          key={`${column}-${row}`}\n          name={item.Name}\n          absoluteTop={topOrigin + taskHeigh * row}\n          absoluteLeft={leftOrigin + dayWidth * column}\n          width={dayWidth * spread}\n          height={taskHeigh}\n          paddingLeft={-Math.min(column, 0) * dayWidth}\n          setName={(value) => (setEmptyTask({...emptyTask, Name:value}))}\n          updateTask={(...args) => (updateLocalTask(item.Id, ...args))}\n          launchEditTaskObject={() => (launchEditLocalTaskObject(item.Id))}\n          setIsDrag={(origin) => (handleIsDragBy(item.Id, origin))}\n          askForDependencyIfDrag={() => (handleAskForDependencyIfDrag(item.Id))}\n        />\n      );\n\n      // Add dependencies if any\n      if (item.linkedTo && item.Id !== editedTask.Id)  {\n        placeDependencies(item.Id, item.linkedTo)\n      }\n    };\n  }\n\n  function placeDependencies(fromId, toIds) {\n    toIds.forEach((toId, _) => {\n      if (toId !== editedTask.Id) {\n        dependencies.push(\n          <Xarrow\n            start={`Task-${fromId}`}\n            end={`Task-${toId}`}\n            curveness={0.5}\n            strokeWidth={3}\n          />\n        )\n      }\n    })\n  }\n\n  function validateEditedTask() {\n    // Only validate if task exist\n    if (!editedTask.Id || !editedTask.Name || !editedTask.StartDate || !editedTask.DueDate) {\n      return;\n    };\n\n    editStoreTask({...editedTask});\n  }\n\n  function validateEmptyTask() {\n    // Only validate if task exist\n    if (!emptyTask.Name || !emptyTask.StartDate || !emptyTask.DueDate) {\n      return;\n    };\n\n    const taskId = Date.now().toString();\n    editStoreTask({...emptyTask, Id: taskId});\n  }\n\n  function validateRunningTasks() {\n    // Validate empty and edited task\n    if (emptyTask.StartDate && emptyTask.DueDate) {\n      validateEmptyTask();\n      setEmptyTask({});\n      return true;\n    } else if (editedTask.Id) {\n      if (isEditTaskPanelOpen) {\n        setIsEditTaskPanelOpen(false);\n      };\n      validateEditedTask();\n      setEditedTask({});\n      return true;\n    };\n    return false;\n  }\n\n  function createTask(column, row) {\n    // Just remove if already there\n    if (validateRunningTasks()) {\n      return;\n    };\n\n    if (!column || !row) {\n      return;\n    }\n    let i = 0\n    for (i = 0; i < EMPTY_TASK_MAX_SPREAD; i++) {\n      if (timelineMap[`${column + i}:${row}`]) {\n        break\n      };\n    };\n    // Impossible to spawn new task here\n    if (i === 0) {\n      return;\n    };\n\n    setEmptyTask({\n      Name: \"\",\n      StartDate: new Date(dayOrigin.getTime() + column * 86400000),\n      DueDate: new Date(dayOrigin.getTime() + (column + i - 1) * 86400000),\n      row: row,\n    });\n  }\n\n  function launchEditLocalTaskObject(taskId) {\n    // Verification if creation / edition running (should not happen)\n    if (validateRunningTasks()) {\n      return;\n    };\n\n    // Open Edition panel\n    const localTask = findTask(taskId);\n    setIsEditTaskPanelOpen(true);\n    setEditedTask(localTask);\n  }\n\n  function editCurrentLocalTaskObject(newTaskObject) {\n    setEditedTask(newTaskObject);\n  }\n\n  function updateLocalTask(taskId, side, clientX, clientY) {\n    if (!taskId || !side || (!clientX && !clientY)) {\n      return;\n    }\n    const localTask = findTask(taskId);\n    const fromColumn = localStoreMapInfo[taskId].column;\n    const toColumn = localStoreMapInfo[taskId].column + localStoreMapInfo[taskId].spread - 1;\n    const currentRow = localStoreMapInfo[taskId].row;\n\n    if (side === \"left\") {\n      const localColumn = Math.floor((clientX - leftOrigin - dayWidth / 2) / dayWidth);\n      if (localColumn > toColumn || localColumn - fromColumn === 0) {\n        return;\n      }\n      for (let i = Math.min(localColumn, fromColumn); i <= Math.max(localColumn, fromColumn); i++) {\n        if (timelineMap[`${i}:${currentRow}`] && timelineMap[`${i}:${currentRow}`] !== taskId) {\n          return;\n        };\n      };\n      setEditedTask({\n        ...localTask,\n        StartDate: new Date(localTask.StartDate.getTime() + (localColumn - fromColumn) * 86400000),\n      });\n\n    } else if (side === \"right\") {\n      const localColumn = Math.floor((clientX - leftOrigin - dayWidth / 2) / dayWidth);\n      if (localColumn < fromColumn || localColumn - toColumn === 0) {\n        return;\n      }\n      for (let i = Math.min(localColumn, toColumn); i <= Math.max(localColumn, toColumn); i++) {\n        if (timelineMap[`${i}:${currentRow}`] && timelineMap[`${i}:${currentRow}`] !== taskId) {\n          return;\n        };\n      };\n      setEditedTask({\n        ...localTask,\n        DueDate: new Date(localTask.DueDate.getTime() + (localColumn - toColumn) * 86400000),\n      });\n\n    } else if (side === \"all\") {\n      const localColumn = Math.floor((clientX - leftOrigin) / dayWidth);\n      const localRow = Math.floor((clientY - topOrigin) / taskHeigh);\n      const columnShift = Math.floor(localColumn - (toColumn + fromColumn) / 2);  // Grab alway is the middle for now\n      if (localRow < 0 || (columnShift + (localRow - currentRow)  === 0)) {\n        return;\n      };\n\n      for (let i = fromColumn + columnShift; i <= toColumn + columnShift; i++) {\n        if (timelineMap[`${i}:${localRow}`] && timelineMap[`${i}:${localRow}`] !== taskId) {\n          return;\n        };\n      };\n      setEditedTask({\n        ...localTask,\n        StartDate: new Date(localTask.StartDate.getTime() + columnShift * 86400000),\n        DueDate: new Date(localTask.DueDate.getTime() + columnShift * 86400000),\n        row: localRow,\n      });\n    };\n\n    return;\n  };\n\n  return (\n    <div\n      onMouseUp={handleMouseUp}\n      className=\"Timeline\"\n    >\n      <TaskCreator\n        absoluteTop={topOrigin}\n        absoluteLeft={leftOrigin}\n        width={dayWidth * maxSpread}\n        dayWidth={dayWidth}\n        taskHeigh={taskHeigh}\n        createTask={createTask}\n      />\n      {tasks}\n      {dependencies}\n      <EditTaskPanel\n          taskObject={isEditTaskPanelOpen ? editedTask : {}}\n          editTaskObject={editCurrentLocalTaskObject}\n      />\n      {isDrag && (\n        <DragDependencyBox\n          positionX={dragX}\n          positionY={dragY}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Timeline;\n","import \"./Spinner.css\"\n\nfunction Spinner() {\n  return (\n    <div\n      className=\"Spinner\"\n    />\n  )\n}\n\nexport default Spinner;\n","import getDaySpread from \"./getDaySpread\";\n\nimport {\n  DEPTH_LIMIT,\n} from \"../constants/constants\"\n\n// Receive a list a return a list\nfunction getStoreWithRow(store) {\n  const storeWithRow = [];\n\n  const storeMap = {};\n\n  store.forEach((item, i) => {\n    // Convert date\n    item.StartDate = new Date(item.StartDate);\n    item.DueDate = new Date(item.DueDate);\n    // Get offset and spread\n    const dayOffset = getDaySpread(new Date(), item.StartDate);\n    const spread = getDaySpread(item.StartDate, item.DueDate) + 1;\n\n    let row = -1, column = dayOffset;\n    if (item.row) {\n      // Check for collision\n      let isCollision = false;\n      for (let i = 0; i < spread; i++) {\n        if (storeMap[`${column + i}:${item.row}`]) {\n          isCollision = true;\n          break;\n        };\n      };\n      if (!isCollision) {\n        row = item.row;\n      };\n    };\n\n    // Not set yet\n    if (row === -1) {\n      // Find no collision\n      let j = 0;\n      let isCollision = false;\n      do {\n        isCollision = false;\n        for (let i = 0; i < spread; i++) {\n          if (storeMap[`${column + i}:${j}`]) {\n            isCollision = true;\n            break;\n          };\n        };\n        j += 1;\n      } while (isCollision && j < DEPTH_LIMIT)\n      row = j- 1;\n    };\n\n    // Populate map\n    for (let i = 0; i < spread; i++) {\n      storeMap[`${column + i}:${row}`] = item.Id;\n    };\n\n    // Populate store with row\n    storeWithRow.push( {\n      ...item,\n      row: row,\n    });\n  });\n\n  return storeWithRow;\n};\n\nexport default getStoreWithRow;\n","const localStore =  {\n  \"1\" : {\n    Id: \"1\",\n    Name: \"This is a task\",\n    StartDate: new Date(Date.now() - 2 * 86400000),\n    DueDate: new Date(Date.now() + 86400000),\n  },\n};\n\nexport async function fetchStore(_) {\n  const response = new Promise((resolve, reject) => {\n    resolve({\n      result: {\n        Items: Object.values(localStore)\n      }\n    });\n  });\n\n  return await response;\n}\n\nexport async function updateStore(_, item) {\n  // TODO: Check if Id is valid\n  const response = new Promise((resolve, reject) => {\n    localStore[item.Id] = {...item};\n    resolve({\n      result: {}\n    });\n  });\n\n  return await response;\n}\n\nexport const registrationInformation = {};\n","// TODO: Look at https://www.npmjs.com/package/react-select for improvement\n\nimport { useState} from \"react\"\nimport Select from \"react-select\"\n\nimport \"./RegisterStore.css\"\n\nfunction RegisterStore({registrationOptions, submitOptions}) {\n  const [selectedOption, setSelectionOption] = useState()\n  const [options, setOptions] = useState({})\n\n  function handleOptionChange(newSelectedOption) {\n    setSelectionOption(newSelectedOption);\n  }\n\n  function handleChange(key, value) {\n    setOptions({\n      ...options,\n      [key]: value,\n    })\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault() // Do not reload the page\n\n    submitOptions(selectedOption.value, options)\n  }\n\n  console.log(selectedOption)\n  console.log(options)\n\n  // Convert registrationOptions to correct format for Select\n  const optionsToSelect = Object.entries(registrationOptions).map(([key, value], i) => (\n    {value: key, label: value.label}\n  ))\n  return (\n    <div\n      className=\"RegisterStore\"\n    >\n    <p>\n      Connect to your database.<br/>\n    </p>\n    <form onSubmit={handleSubmit}>\n      <Select\n        value={selectedOption}\n        onChange={handleOptionChange}\n        options={optionsToSelect}\n      />\n      {selectedOption && Object.entries((registrationOptions[selectedOption.value].params || {})).length > 0 && (\n        <span className=\"separationline\"/>\n      )}\n      {selectedOption && (\n        Object.entries((registrationOptions[selectedOption.value].params || {})).map(([key, value], i) => (\n          <div className=\"registerinformation\" key={key}>\n          <label className=\"registerinformationlabel\" htmlFor={key}>{key}</label>\n          <input required\n            className=\"registerinformationinput\"\n            type={value}\n            name={key}\n            value={options[key]}\n            onChange={(e) => (handleChange(key, e.target.value))}/>\n          </ div>\n        ))\n      )}\n      <input type=\"submit\" value=\"Validate\" />\n    </form>\n\n    <div className=\"formfooter\">\n      <span>\n      Don't have a database?\n      </span>\n      <a href=\"https://github.com/AdrKacz/simple-gantt-timeline/blob/main/aws/README.md\" target=\"_blank\" rel=\"noreferrer\">\n      Create your database\n      </a>\n    </div>\n    </div>\n  )\n}\n\nexport default RegisterStore;\n","import { useState, useEffect } from \"react\";\nimport getStoreWithRow from \"../helpers/getStoreWithRow\";\n\nimport {\n  fetchStore as fetchLocalStore,\n  updateStore as updateLocalStore,\n  registrationInformation as registrationLocalInformation\n} from \"./LocalStore\"\n\nimport RegisterStore from \"../components/RegisterStore/RegisterStore\"\n\n// AWS functions\nasync function fetchAWSStore(information) {\n\n  const response = await fetch(information.apiEndpoint, {\n    method: 'POST',\n    body: JSON.stringify({\n      action: 'scan',\n    }),\n  });\n\n  return await response.json();\n}\n\nasync function updateAWSStore(information, item) {\n\n  const response = await fetch(information.apiEndpoint, {\n    method: 'POST',\n    body: JSON.stringify({\n      action: 'update',\n      item: {\n        ...item,\n        StartDate: new Date(item.StartDate).toISOString(),\n        DueDate: new Date(item.DueDate).toISOString(),\n      }\n    }),\n  });\n\n  return await response.json();\n}\n\nconst registrationAWSInformation = {apiEndpoint: \"url\"};\n\n// For now it only works with AWS setup or local\nconst storeFunctions = {\n  'aws': {\n    'fetch': fetchAWSStore,\n    'update': updateAWSStore\n  },\n  'local': {\n    'fetch': fetchLocalStore,\n    'update': updateLocalStore\n  }\n};\n\nconst storeInformation = {\n  'aws': {\n    params: registrationAWSInformation,\n    label: \"AWS\",\n  },\n  'local': {\n    params: registrationLocalInformation,\n    label: \"Local (your work won't be saved)\",\n  },\n}\n\n// \"https://0zqu3fq0l8.execute-api.eu-north-1.amazonaws.com/default/gantt-timeline\"\n\n// {\n//   storeType: \"aws\",\n//   apiEndpoint: \"https://0zqu3fq0l8.execute-api.eu-north-1.amazonaws.com/default/gantt-timeline\",\n// }\n\n// function registerStore() {\n//\n// };\n\nfunction useStore() {\n  const [registrationInformation, setRegistrationInformation] = useState({})\n  const [store, setStore] = useState(null);\n  const [localUpdateStoreWith, setLocalUpdateStoreWith] = useState(null);\n\n  // Update function\n  function setUpdateStoreWith(item) {\n    setLocalUpdateStoreWith(item);\n    setStore(null); // to avoid display false information, have to be improved\n  }\n\n  function submitOptions(selectedOption, options) {\n    setRegistrationInformation({\n      storeType: selectedOption,\n      ...options,\n    })\n  }\n\n  // Fetch\n  useEffect(() => {\n    if (!registrationInformation.storeType) { // security update\n      return;\n    }\n\n    let isMounted = true;\n    storeFunctions[registrationInformation.storeType].fetch(registrationInformation).then(response => {\n      // Avoid updating state if the component unmounted before the fetch completes\n      if (!isMounted) {\n        return;\n      }\n      const data = response.result;\n      // console.count(\"... Receive Data\");\n      // console.log(data);\n      setStore(getStoreWithRow(data.Items));\n    }).catch(err => {\n      console.error(err);\n    });\n\n    return () => {\n      isMounted = false;\n    };\n  }, [registrationInformation])\n\n  // Update\n  useEffect(() => {\n    if (!registrationInformation.storeType) { // security update\n      return;\n    }\n\n    if (localUpdateStoreWith === null) {\n      return;\n    };\n    // Has something to update\n    let isMounted = true;\n    storeFunctions[registrationInformation.storeType].update(registrationInformation, localUpdateStoreWith).then(response => {\n      // Avoid updating state if the component unmounted before the fetch completes\n      if (!isMounted) {\n        return;\n      }\n      // const data = response.result;\n      // console.count(\"... Update Data\");\n      // console.log(data);\n    }).then((_) => {\n      return storeFunctions[registrationInformation.storeType].fetch(registrationInformation);\n    }).then(response => {\n      // Avoid updating state if the component unmounted before the fetch completes\n      if (!isMounted) {\n        return;\n      }\n      const data = response.result;\n      // console.count(\"... Receive Data\");\n      // console.log(data);\n      setStore(getStoreWithRow(data.Items));\n    }).catch(err => {\n      console.error(err);\n    });\n\n    return () => {\n      isMounted = false;\n    }\n  }, [registrationInformation, localUpdateStoreWith]);\n\n  return [\n    store,\n    setUpdateStoreWith,\n    {\n      hasToRegister: !registrationInformation.storeType,\n      registrationComponent: (\n        <RegisterStore\n          registrationOptions={storeInformation}\n          submitOptions={submitOptions}\n        />\n      )\n    },\n  ];\n}\n\nexport default useStore;\n","import { useState } from \"react\";\n\nimport Slider from \"../Slider/Slider\";\nimport TimeAxis from \"../TimeAxis/TimeAxis\";\nimport Timeline from \"../Timeline/Timeline\";\nimport Spinner from \"../Spinner/Spinner\";\n\nimport {\n  DAY_WIDTH,\n  TASK_HEIGHT,\n} from \"../../constants/constants\";\n\nimport useStore from \"../../store/useStore\";\n\nimport './App.css';\n\nfunction App() {\n  // TODO: useStore hook\n  const [store, setUpdateStoreWith, registration] = useStore();\n\n  const [fromDate, setFromDate] = useState(new Date(Date.now() - 7 * 86400000))\n\n  const topOrigin = 2 * TASK_HEIGHT;\n  const leftOrigin = 0;\n  // Get max number of slot in window\n  const windowWidth = window.innerWidth;\n  const maxSpread = Math.floor(windowWidth / DAY_WIDTH);\n\n  function editTask(task) {\n    // Do nothing if task not valid\n    if (!task.Id || !task.Name || !task.StartDate || !task.DueDate) {\n      return;\n    };\n\n    setUpdateStoreWith({...task});\n  }\n  console.log(\"Store is:\", store);\n  return (\n    <div className=\"App\">\n      <Slider\n      previous={(_) => (setFromDate(new Date(fromDate.getTime() - 86400000)))}\n      next={(_) => (setFromDate(new Date(fromDate.getTime() + 86400000)))}\n      />\n      <TimeAxis\n        topOrigin={topOrigin}\n        leftOrigin={leftOrigin}\n        maxSpread={maxSpread}\n        dayWidth={DAY_WIDTH}\n        dayOrigin={fromDate}\n        height={TASK_HEIGHT}\n      />\n      {store !== null ?\n        <Timeline\n          fromDate={fromDate}\n          topOrigin={topOrigin + 2 * TASK_HEIGHT}\n          leftOrigin={leftOrigin}\n          maxSpread={maxSpread}\n          dayWidth={DAY_WIDTH}\n          taskHeigh={TASK_HEIGHT}\n          store={store}\n          editStoreTask={editTask}\n        /> :\n        <Spinner />\n      }\n      {registration.hasToRegister && registration.registrationComponent}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\n\n// Development\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// Production\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}