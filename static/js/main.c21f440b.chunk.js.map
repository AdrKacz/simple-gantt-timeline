{"version":3,"sources":["components/Slider/Slider.js","helpers/getDaySpread.js","components/TimeAxis/TimeAxis.js","hooks/useMousePosition.js","components/TaskHandle/TaskHandle.js","components/Task/Task.js","components/EmptyTask/EmptyTask.js","hooks/useKeyPress.js","components/TaskCreator/TaskCreator.js","components/EditTaskPanel/EditTaskPanel.js","constants/constants.js","components/Timeline/Timeline.js","components/Spinner/Spinner.js","store/useStore.js","helpers/getStoreWithRow.js","store/mock-database.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["Slider","previous","next","_","className","onClick","e","preventDefault","stopPropagation","getDaySpread","dateA","dateB","fromDate","Date","toDate","setUTCHours","setUTCMinutes","setUTCSeconds","setUTCMilliseconds","Math","floor","getTime","MONTH_MAP","TimeAxis","topOrigin","leftOrigin","maxSpread","dayWidth","dayOrigin","height","months","dates","today","weekends","Array","fill","forEach","item","i","currentDay","push","getDay","style","top","left","width","getDate","getMonth","listeningCounter","eventTargets","listenTargets","positionHandler","clientX","clientY","updatePositionEvent","CustomEvent","detail","x","y","Object","values","dispatchEvent","mouseUpHandler","keys","key","useMousePosition","targetKey","EventTarget","useState","offset","setOffset","memoizedUpdatePositionHandler","useCallback","touchPoint","useEffect","window","addEventListener","removeEventListener","undefined","isListening","TaskHandle","handleKey","updateTaskHandle","isLeft","setIsListening","onMouseDown","Task","name","absoluteTop","absoluteLeft","paddingLeft","taskKey","updateTask","launchEditTaskObject","updateTaskHandleSide","side","EmptyTask","setName","inputRef","useRef","current","focus","ref","value","onChange","target","type","placeholder","useKeyPress","keyPressed","setKeyPressed","memoizedDownHandler","memoizedUpHandler","TaskCreator","taskHeigh","createTask","enterPressed","offsetX","nativeEvent","offsetY","column","row","tabIndex","EditTaskPanel","taskObject","editTaskObject","onMouseUp","Id","Name","Timeline","mouseEvent","store","editStoreTask","emptyTask","setEmptyTask","editedTask","setEditedTask","isEditTaskPanelOpen","setIsEditTaskPanelOpen","timelineMap","localStoreMapInfo","tasks","findTask","taskId","localTask","length","placeTask","Template","dayOffset","StartDate","spread","DueDate","min","args","updateLocalTask","validateRunningTasks","launchEditLocalTaskObject","now","toString","validateEmptyTask","fromColumn","toColumn","currentRow","localColumn","max","localRow","columnShift","newTaskObject","Spinner","APIEndpoint","fetchStore","a","fetch","method","body","JSON","stringify","action","response","json","toISOString","getStoreWithRow","storeWithRow","storeMap","isCollision","j","App","setStore","updateStoreWith","setUpdateStoreWith","isMounted","then","data","result","console","count","log","Items","catch","err","error","updateStore","setFromDate","windowWidth","innerWidth","task","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c21f440b.chunk.js","sourcesContent":["// TODO: Center text vertically\n// TODO: CHange layout to add transparent padding\n\nimport './Slider.css';\n\nfunction Slider({previous, next}) {\n  previous = previous ?? ((_) => (undefined));\n  next = next ?? ((_) => (undefined));\n  \n  function previousDate(e) {\n    e.preventDefault();\n    e.stopPropagation();\n\n    previous();\n  };\n\n  function nextDate(e) {\n    e.preventDefault();\n    e.stopPropagation();\n\n    next();\n  };\n\n  return (\n    <div className=\"Slider\">\n      <button\n        onClick={previousDate}\n      >\n      <i className=\"arrow left\" />\n      </button>\n      <button\n        onClick={nextDate}\n      >\n      <i className=\"arrow right\" />\n      </button>\n    </div>\n  );\n}\n\nexport default Slider;\n","// TODO: More resiliant day spread calculator for multiple timezone and change in day time\nfunction getDaySpread(dateA, dateB) {\n  const fromDate = new Date(dateA);\n  const toDate = new Date(dateB);\n  fromDate.setUTCHours(0);\n  fromDate.setUTCMinutes(0);\n  fromDate.setUTCSeconds(0);\n  fromDate.setUTCMilliseconds(0);\n\n  toDate.setUTCHours(0);\n  toDate.setUTCMinutes(0);\n  toDate.setUTCSeconds(0);\n  toDate.setUTCMilliseconds(0);\n  return Math.floor((toDate.getTime() - fromDate.getTime()) / 86400000);\n};\n\nexport default getDaySpread;\n","import './TimeAxis.css';\n\nimport getDaySpread from \"../../helpers/getDaySpread\";\n\nconst MONTH_MAP = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\",\n]\n\nfunction TimeAxis({topOrigin, leftOrigin, maxSpread, dayWidth, dayOrigin, height}) {\n  const months = [];\n  const dates = [];\n  const today = [];\n  const weekends = [];\n\n  Array(maxSpread + 1).fill(0).forEach((item, i) => {\n    i -= 1; // Start one day earlier to catch Sunday weekend strip\n    // Get Date\n    const currentDay = new Date(dayOrigin.getTime() + i * 86400000)\n\n    // Add Date\n    dates.push(\n      <div\n        key={`date-${i}`}\n        className={`time${(currentDay.getDay() === 5 || currentDay.getDay() === 6) ? \" weekendday\" : \"\"}`}\n        style={{\n          top: topOrigin + height,\n          left: leftOrigin + dayWidth * i,\n          width: dayWidth,\n          height: height,\n        }}>\n        {currentDay.getDate()}\n      </div>\n    );\n\n    // Add today if today\n    if (getDaySpread(currentDay, new Date()) === 0) {\n      today.push(\n        <div\n          key={`todaymarker-${i}`}\n          className=\"todaymarker\"\n          style={{\n            top: topOrigin + 2 * height,\n            left: leftOrigin + dayWidth * i + dayWidth / 2,\n          }}\n        />\n      );\n\n      today.push(\n        <div\n          key={`todaystrip-${i}`}\n          className=\"todaystrip\"\n          style={{\n            top: topOrigin + 2 * height,\n            left: leftOrigin + dayWidth * i + dayWidth / 2,\n          }}\n        />\n      );\n    };\n\n    // Add weekends (if Saturday -5-)\n    if (currentDay.getDay() === 5) {\n      weekends.push(\n        <div\n          key={`weekends-${i}`}\n          className=\"weekend\"\n          style={{\n            top: topOrigin + height,\n            left: leftOrigin + dayWidth * i,\n            width: 2 * dayWidth,\n          }}\n        />\n      )\n    }\n\n    // Add Month\n    if (i === 0 || currentDay.getDate() === 1) {\n      months.push(\n        <div\n          key={`month-${i}`}\n          className=\"month\"\n          style={{\n            top: topOrigin,\n            left: leftOrigin + dayWidth * i,\n            height: height,\n          }}>\n          {MONTH_MAP[currentDay.getMonth()]}\n        </div>\n      );\n    }\n  });\n\n  return (\n    <div className=\"TimeAxis\">\n      <div\n        className=\"timebackground\"\n        style={{\n          top: topOrigin + 2 * height,\n          left: leftOrigin,\n        }}\n      />\n      {weekends}\n      {months}\n      {dates}\n      {today}\n    </div>\n  );\n}\n\nexport default TimeAxis;\n","// TODO: Optmise handler to not update at every frame\n\nimport { useState, useEffect, useCallback } from \"react\";\n\n// import {\n//   MINIMUM_SQUARED_DETECTION_RADIUS\n// } from \"../constants/constants\"\n\nlet listeningCounter = 0;\nconst eventTargets = {};\nconst listenTargets = {};\n\nfunction positionHandler({clientX, clientY}) {\n  const updatePositionEvent = new CustomEvent(\"updateposition\", {detail: {x: clientX, y: clientY}})\n  Object.values(eventTargets).forEach((item, _) => {\n    item.dispatchEvent(updatePositionEvent);\n  });\n};\n\nfunction mouseUpHandler() {\n  Object.keys(listenTargets).forEach((key, _) => {\n    listenTargets[key] = false;\n  });\n};\n\n// function squaredDistance(pointA, pointB) {\n//   return ((pointA[0] - pointB[0]) ** 2 + (pointA[1] - pointB[1]) ** 2)\n// }\n\nfunction useMousePosition(targetKey) {\n  eventTargets[targetKey] = eventTargets[targetKey] ?? new EventTarget();\n  listenTargets[targetKey] = listenTargets[targetKey] ?? false;\n\n  // console.table(listenTargets);\n\n  const [offset, setOffset] = useState([0, 0]);\n\n  function setIsListening(isListening) {\n    listenTargets[targetKey] = isListening;\n  }\n\n  const memoizedUpdatePositionHandler = useCallback(\n    (e) => {\n      const touchPoint = [e.detail.x, e.detail.y]\n      if (listenTargets[targetKey]) {\n        setOffset(touchPoint);\n      };\n    },\n    [targetKey],\n  );\n\n  useEffect(() => {\n    // Attach global listener to window\n    if (listeningCounter === 0) {\n      window.addEventListener(\"mousemove\", positionHandler);\n      window.addEventListener(\"mouseup\", mouseUpHandler);\n    };\n    // Send update to local listener if any\n    eventTargets[targetKey].addEventListener(\"updateposition\", memoizedUpdatePositionHandler);\n\n    listeningCounter += 1; // How many component are listening to mouse position\n    return () => {\n      // Remove update to local listener if any\n      eventTargets[targetKey].removeEventListener(\"updateposition\", memoizedUpdatePositionHandler);\n\n      listeningCounter -= 1; // How many component are listening to mouse position\n\n      // Detach global listener to window\n      if (listeningCounter === 0) {\n        window.removeEventListener(\"mousemove\", positionHandler);\n        window.removeEventListener(\"mouseup\", mouseUpHandler);\n      };\n    };\n  }, [targetKey, memoizedUpdatePositionHandler]);\n\n  return [\n    listenTargets[targetKey] ? offset[0] : undefined,\n    listenTargets[targetKey] ? offset[1] : undefined,\n    setIsListening,\n  ];\n}\n\nexport default useMousePosition;\n","import { useEffect } from \"react\";\n\nimport useMousePosition from \"../../hooks/useMousePosition\";\n\nimport './TaskHandle.css';\n\nfunction TaskHandle({width, height, handleKey, updateTaskHandle, isLeft}) {\n  const [clientX, , setIsListening] = useMousePosition(handleKey);\n  function handleMouseDown(e) {\n    setIsListening(true);\n  };\n\n  useEffect(() => {\n    updateTaskHandle(clientX)\n  }, [clientX, updateTaskHandle]);\n\n  return (\n    <div\n      onMouseDown={handleMouseDown}\n      className={`TaskHandle ${isLeft ? \"handleleft\" : \"handleright\"}`}\n      style={{\n        height: height,\n      }}\n    >\n    </div>\n  );\n}\n\nexport default TaskHandle;\n","// TODO: Center text vertically\n// TODO: Change layout to add transparent padding\n\nimport { useEffect } from \"react\";\n\nimport TaskHandle from \"../TaskHandle/TaskHandle\";\n\nimport useMousePosition from \"../../hooks/useMousePosition\";\n\nimport './Task.css';\n\nfunction Task({name, absoluteTop, absoluteLeft, width, height, paddingLeft, taskKey, updateTask, launchEditTaskObject}) {\n  const [clientX, clientY, setIsListening] = useMousePosition(taskKey);\n\n  function handleMouseDown(e) {\n    setIsListening(true);\n  };\n\n  function updateTaskHandleSide(side, clientX) {\n    updateTask(side, clientX, 0);\n  };\n\n  function handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n\n    launchEditTaskObject();\n  }\n\n  useEffect(() => {\n    updateTask(\"all\", clientX, clientY);\n  }, [clientX, clientY, updateTask])\n\n  return (\n    <div\n      className=\"Task\"\n      onClick={handleClick}\n      style={{\n        top: absoluteTop,\n        left: absoluteLeft,\n        width: width,\n        height: height,\n      }}\n    >\n      <TaskHandle\n        isLeft\n        handleKey={`${taskKey}:left`}\n        width={10}\n        height={height}\n        updateTaskHandle={(clientX) => (updateTaskHandleSide(\"left\", clientX))}\n      />\n      <div\n        className=\"text-container\"\n        onMouseDown={handleMouseDown}\n        style={{\n          \"padding-left\": paddingLeft, // NOTE: Trigger an error for no reason\n        }}\n      >\n      {name}\n      </div>\n      <TaskHandle\n        handleKey={`${taskKey}:right`}\n        width={10}\n        height={height}\n        updateTaskHandle={(clientX) => (updateTaskHandleSide(\"right\", clientX))}\n      />\n    </div>\n  );\n}\n\nexport default Task;\n","import { useRef, useEffect } from \"react\";\n\nimport './EmptyTask.css';\n\nfunction EmptyTask({name, absoluteTop, absoluteLeft, width, height, paddingLeft, setName}) {\n  const inputRef = useRef(null);\n\n  function handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  function handleChange(e) {\n    e.preventDefault();\n    e.stopPropagation();\n\n    setName(e.target.value);\n  };\n\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  return (\n    <div\n      className=\"Task EmptyTask\"\n      onClick={handleClick}\n      style={{\n        top: absoluteTop,\n        left: absoluteLeft,\n        width: width,\n        height: height,\n        \"padding-left\": paddingLeft,\n      }}\n    >\n      <input\n        className=\"emptytaskname\"\n        ref={inputRef}\n        value={name}\n        onChange={handleChange}\n        type=\"text\"\n        placeholder=\"Write a task name\"\n      />\n    </div>\n  );\n}\n\nexport default EmptyTask;\n","import { useState, useEffect, useCallback } from \"react\";\n\nfunction useKeyPress(targetKey) {\n  // State for keeping track of wether key is pressed\n  const [keyPressed, setKeyPressed] = useState(false);\n  // If pressed key is our target key then set to true\n  const memoizedDownHandler = useCallback(\n    ({key}) => {\n      if (key === targetKey) {\n        setKeyPressed(true);\n      };\n    },\n    [targetKey]\n  );\n  // If released key is out target key then set to false\n  const memoizedUpHandler = useCallback(\n    ({key}) => {\n      if (key === targetKey) {\n        setKeyPressed(false);\n      };\n    },\n    [targetKey]\n  );\n  // Add event listener\n  useEffect(() => {\n    window.addEventListener(\"keydown\", memoizedDownHandler);\n    window.addEventListener(\"keyup\", memoizedUpHandler);\n    // Remove event listeners on cleanup\n    return () => {\n      window.removeEventListener(\"keydown\", memoizedDownHandler);\n      window.removeEventListener(\"keyup\", memoizedUpHandler);\n    };\n  }, [memoizedDownHandler, memoizedUpHandler]); // Empty array ensures that effects is only run on mount and unmount\n  return keyPressed;\n};\n\nexport default useKeyPress;\n","import { useEffect } from \"react\";\n\nimport './TaskCreator.css';\n\nimport useKeyPress from \"../../hooks/useKeyPress\";\n\nfunction TaskCreator({absoluteTop, absoluteLeft, width, height, dayWidth, taskHeigh, createTask}) {\n  const enterPressed = useKeyPress(\"Enter\")\n\n  function handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n\n    const offsetX = e.nativeEvent.offsetX;\n    const offsetY = e.nativeEvent.offsetY;\n\n    const column = Math.floor(offsetX / dayWidth);\n    const row = Math.floor(offsetY / taskHeigh);\n\n    createTask(column, row)\n  }\n\n  useEffect(() => {\n    if (enterPressed) {\n      createTask()\n    }\n  }, [enterPressed, createTask])\n\n  return (\n    <div\n    className=\"TaskCreator\"\n    onClick={handleClick}\n    tabIndex={0}\n    style={{\n      top: absoluteTop,\n      left: absoluteLeft,\n      width: width,\n      height: height,\n    }}\n    >\n    </div>\n  );\n}\n\nexport default TaskCreator;\n","import './EditTaskPanel.css';\n\nfunction EditTaskPanel({taskObject, editTaskObject}) {\n  function handleMouseUp(e) {\n    e.preventDefault();\n    e.stopPropagation();\n  }\n  function handleNameChange(e) {\n    e.preventDefault();\n    e.stopPropagation();\n\n    editTaskObject({\n      ...taskObject,\n      Name: e.target.value,\n    })\n  }\n\n  return (\n    <div\n      onMouseUp={handleMouseUp}\n      className={`EditTaskPanel${taskObject.Id ? \" visible\" : \"\"}`}\n    >\n      {taskObject.Id && (\n        <input\n          className=\"taskname\"\n          value={taskObject.Name}\n          onChange={handleNameChange}\n          type=\"text\"\n          placeholder=\"Write a task name\"\n        />\n      )}\n    </div>\n  )\n};\n\nexport default EditTaskPanel;\n","// TODO: To be set dynamically\n\n// Constant in pixel\n\n// For App\nexport const DAY_WIDTH = 64;\nexport const TASK_HEIGHT = 34;\n\n// For Timeline\nexport const EMPTY_TASK_MAX_SPREAD = 5;\nexport const DEPTH_LIMIT = 100;\n\n// For useMousePosition (don't work, maximum death update when trying to reduce the number of update ...)\nexport const MINIMUM_SQUARED_DETECTION_RADIUS = 100 ** 2;\n","// TODO: Anchor point for Timeline with dynamic position\n// TODO: Get Dynamic Window width for TimeAxis (WINDOW_WIDTH)\n// NOTE: Dynamic Constant\nimport { useState } from \"react\";\n\nimport Task from \"../Task/Task\";\nimport EmptyTask from \"../EmptyTask/EmptyTask\";\nimport TaskCreator from \"../TaskCreator/TaskCreator\";\nimport EditTaskPanel from \"../EditTaskPanel/EditTaskPanel\";\n\nimport './Timeline.css';\n\nimport {\n  EMPTY_TASK_MAX_SPREAD,\n} from \"../../constants/constants\"\n\n// Functions\nimport getDaySpread from \"../../helpers/getDaySpread\";\n\nfunction Timeline({mouseEvent, fromDate, topOrigin, leftOrigin, maxSpread, dayWidth, taskHeigh, store, editStoreTask}) {\n  editStoreTask = editStoreTask ?? ((_) => (undefined));\n\n  function handleMouseUp() {\n    if (!isEditTaskPanelOpen && editedTask.Id) {\n      validateRunningTasks();\n    };\n  };\n\n  // TODO: Both can be merged\n  const [emptyTask, setEmptyTask] = useState({});\n  const [editedTask, setEditedTask] = useState({});\n\n  const [isEditTaskPanelOpen, setIsEditTaskPanelOpen] = useState(false);\n\n  const dayOrigin = new Date(fromDate.getTime());\n  const timelineMap = {};\n  const localStoreMapInfo = {}\n  const tasks = [];\n\n  store.forEach((item, _) => {\n    if (editedTask.Id === item.Id) {\n      placeTask(editedTask, Task);\n    } else {\n      placeTask(item, Task);\n    };\n  });\n  if (emptyTask.StartDate && emptyTask.DueDate) {\n    placeTask(emptyTask, EmptyTask);\n  };\n\n  function findTask(taskId) {\n    let localTask;\n    if (editedTask.Id === taskId) {\n      localTask = {...editedTask};\n    } else {\n      for (let i = 0; i < store.length; i++) {\n        if (store[i].Id === taskId) {\n          localTask = {...store[i]}\n          break;\n        };\n      };\n    };\n    return localTask;\n  }\n\n  function placeTask(item, Template) {\n    // Get offset and spread\n    const dayOffset = getDaySpread(dayOrigin, item.StartDate);\n    const spread = getDaySpread(item.StartDate, item.DueDate) + 1;\n\n    let row = item.row, column = dayOffset;\n\n    // Populate map\n    for (let i = 0; i < spread; i++) {\n      timelineMap[`${column + i}:${row}`] = item.Id;\n    };\n    localStoreMapInfo[item.Id] = {\n      column: column,\n      row: row,\n      spread: spread,\n    };\n    // Add tasks\n    if (column + spread - 1 >= 0 && column < maxSpread) {\n\n      tasks.push(\n        <Template\n          taskKey={`Task-${item.Id}`}\n          key={`${column}-${row}`}\n          name={item.Name}\n          absoluteTop={topOrigin + taskHeigh * row}\n          absoluteLeft={leftOrigin + dayWidth * column}\n          width={dayWidth * spread}\n          height={taskHeigh}\n          paddingLeft={-Math.min(column, 0) * dayWidth}\n          setName={(value) => (setEmptyTask({...emptyTask, Name:value}))}\n          updateTask={(...args) => (updateLocalTask(item.Id, ...args))}\n          launchEditTaskObject={() => (launchEditLocalTaskObject(item.Id))}\n        />\n      );\n    };\n  }\n\n  function validateEditedTask() {\n    // Only validate if task exist\n    if (!editedTask.Id || !editedTask.Name || !editedTask.StartDate || !editedTask.DueDate) {\n      return;\n    };\n\n    editStoreTask({...editedTask});\n  }\n\n  function validateEmptyTask() {\n    // Only validate if task exist\n    if (!emptyTask.Name || !emptyTask.StartDate || !emptyTask.DueDate) {\n      return;\n    };\n\n    const taskId = Date.now().toString();\n    editStoreTask({...emptyTask, Id: taskId});\n  }\n\n  function validateRunningTasks() {\n    // Validate empty and edited task\n    if (emptyTask.StartDate && emptyTask.DueDate) {\n      validateEmptyTask();\n      setEmptyTask({});\n      return true;\n    } else if (editedTask.Id) {\n      if (isEditTaskPanelOpen) {\n        setIsEditTaskPanelOpen(false);\n      };\n      validateEditedTask();\n      setEditedTask({});\n      return true;\n    };\n    return false;\n  }\n\n  function createTask(column, row) {\n    // Just remove if already there\n    if (validateRunningTasks()) {\n      return;\n    };\n\n    if (!column || !row) {\n      return;\n    }\n    let i = 0\n    for (i = 0; i < EMPTY_TASK_MAX_SPREAD; i++) {\n      if (timelineMap[`${column + i}:${row}`]) {\n        break\n      };\n    };\n    // Impossible to spawn new task here\n    if (i === 0) {\n      return;\n    };\n\n    setEmptyTask({\n      Name: \"\",\n      StartDate: new Date(dayOrigin.getTime() + column * 86400000),\n      DueDate: new Date(dayOrigin.getTime() + (column + i - 1) * 86400000),\n      row: row,\n    });\n  }\n\n  function launchEditLocalTaskObject(taskId) {\n    // Verification if creation / edition running (should not happen)\n    if (validateRunningTasks()) {\n      return;\n    };\n\n    // Open Edition panel\n    const localTask = findTask(taskId);\n    setIsEditTaskPanelOpen(true);\n    setEditedTask(localTask);\n  }\n\n  function editCurrentLocalTaskObject(newTaskObject) {\n    setEditedTask(newTaskObject);\n  }\n\n  function updateLocalTask(taskId, side, clientX, clientY) {\n    if (!taskId || !side || (!clientX && !clientY)) {\n      return;\n    }\n    const localTask = findTask(taskId);\n    const fromColumn = localStoreMapInfo[taskId].column;\n    const toColumn = localStoreMapInfo[taskId].column + localStoreMapInfo[taskId].spread - 1;\n    const currentRow = localStoreMapInfo[taskId].row;\n\n    if (side === \"left\") {\n      const localColumn = Math.floor((clientX - leftOrigin - dayWidth / 2) / dayWidth);\n      if (localColumn > toColumn || localColumn - fromColumn === 0) {\n        return;\n      }\n      for (let i = Math.min(localColumn, fromColumn); i <= Math.max(localColumn, fromColumn); i++) {\n        if (timelineMap[`${i}:${currentRow}`] && timelineMap[`${i}:${currentRow}`] !== taskId) {\n          return;\n        };\n      };\n      setEditedTask({\n        ...localTask,\n        StartDate: new Date(localTask.StartDate.getTime() + (localColumn - fromColumn) * 86400000),\n      });\n\n    } else if (side === \"right\") {\n      const localColumn = Math.floor((clientX - leftOrigin - dayWidth / 2) / dayWidth);\n      if (localColumn < fromColumn || localColumn - toColumn === 0) {\n        return;\n      }\n      for (let i = Math.min(localColumn, toColumn); i <= Math.max(localColumn, toColumn); i++) {\n        if (timelineMap[`${i}:${currentRow}`] && timelineMap[`${i}:${currentRow}`] !== taskId) {\n          return;\n        };\n      };\n      setEditedTask({\n        ...localTask,\n        DueDate: new Date(localTask.DueDate.getTime() + (localColumn - toColumn) * 86400000),\n      });\n\n    } else if (side === \"all\") {\n      const localColumn = Math.floor((clientX - leftOrigin) / dayWidth);\n      const localRow = Math.floor((clientY - topOrigin) / taskHeigh);\n      const columnShift = Math.floor(localColumn - (toColumn + fromColumn) / 2);  // Grab alway is the middle for now\n      if (localRow < 0 || (columnShift + (localRow - currentRow)  === 0)) {\n        return;\n      };\n\n      for (let i = fromColumn + columnShift; i <= toColumn + columnShift; i++) {\n        if (timelineMap[`${i}:${localRow}`] && timelineMap[`${i}:${localRow}`] !== taskId) {\n          return;\n        };\n      };\n      setEditedTask({\n        ...localTask,\n        StartDate: new Date(localTask.StartDate.getTime() + columnShift * 86400000),\n        DueDate: new Date(localTask.DueDate.getTime() + columnShift * 86400000),\n        row: localRow,\n      });\n    };\n\n    return;\n  };\n\n  return (\n    <div\n      onMouseUp={handleMouseUp}\n      className=\"Timeline\"\n    >\n      <TaskCreator\n        absoluteTop={topOrigin}\n        absoluteLeft={leftOrigin}\n        width={dayWidth * maxSpread}\n        dayWidth={dayWidth}\n        taskHeigh={taskHeigh}\n        createTask={createTask}\n      />\n      {tasks}\n      <EditTaskPanel\n          taskObject={isEditTaskPanelOpen ? editedTask : {}}\n          editTaskObject={editCurrentLocalTaskObject}\n      />\n    </div>\n  );\n}\n\nexport default Timeline;\n","import \"./Spinner.css\"\n\nfunction Spinner() {\n  return (\n    <div\n      className=\"Spinner\"\n    />\n  )\n}\n\nexport default Spinner;\n","const APIEndpoint = \"https://0zqu3fq0l8.execute-api.eu-north-1.amazonaws.com/default/gantt-timeline\";\n\nexport async function fetchStore() {\n\n  const response = await fetch(APIEndpoint, {\n    method: 'POST',\n    body: JSON.stringify({\n      action: 'scan',\n    }),\n  });\n\n  return await response.json();\n}\n\nexport async function updateStore(item) {\n\n  const response = await fetch(APIEndpoint, {\n    method: 'POST',\n    body: JSON.stringify({\n      action: 'update',\n      item: {\n        ...item,\n        StartDate: new Date(item.StartDate).toISOString(),\n        DueDate: new Date(item.DueDate).toISOString(),\n      }\n    }),\n  });\n\n  return await response.json();\n}\n","import getDaySpread from \"./getDaySpread\";\n\nimport {\n  DEPTH_LIMIT,\n} from \"../constants/constants\"\n\n// Receive a list a return a list\nfunction getStoreWithRow(store) {\n  const storeWithRow = [];\n\n  const storeMap = {};\n\n  store.forEach((item, i) => {\n    // Convert date\n    item.StartDate = new Date(item.StartDate);\n    item.DueDate = new Date(item.DueDate);\n    // Get offset and spread\n    const dayOffset = getDaySpread(new Date(), item.StartDate);\n    const spread = getDaySpread(item.StartDate, item.DueDate) + 1;\n\n    let row = -1, column = dayOffset;\n    if (item.row) {\n      // Check for collision\n      let isCollision = false;\n      for (let i = 0; i < spread; i++) {\n        if (storeMap[`${column + i}:${item.row}`]) {\n          isCollision = true;\n          break;\n        };\n      };\n      if (!isCollision) {\n        row = item.row;\n      };\n    };\n\n    // Not set yet\n    if (row === -1) {\n      // Find no collision\n      let j = 0;\n      let isCollision = false;\n      do {\n        isCollision = false;\n        for (let i = 0; i < spread; i++) {\n          if (storeMap[`${column + i}:${j}`]) {\n            isCollision = true;\n            break;\n          };\n        };\n        j += 1;\n      } while (isCollision && j < DEPTH_LIMIT)\n      row = j- 1;\n    };\n\n    // Populate map\n    for (let i = 0; i < spread; i++) {\n      storeMap[`${column + i}:${row}`] = item.Id;\n    };\n\n    // Populate store with row\n    storeWithRow.push( {\n      ...item,\n      row: row,\n    });\n  });\n\n  return storeWithRow;\n};\n\nexport default getStoreWithRow;\n","const store =  {\n  \"1\" : {\n    Id: \"1\",\n    Name: \"Task 1\",\n    StartDate: new Date(Date.now() - 2 * 86400000),\n    DueDate: new Date(Date.now() + 86400000),\n  },\n  \"2\" : {\n    Id: \"2\",\n    Name: \"Task 2\",\n    StartDate: new Date(Date.now() - 86400000),\n    DueDate: new Date(Date.now() + 2 * 86400000),\n  },\n  \"3\" : {\n    Id: \"3\",\n    Name: \"Task 3\",\n    StartDate: new Date(Date.now() - 86400000),\n    DueDate: new Date(Date.now() + 86400000),\n  },\n  \"4\" : {\n    Id: \"4\",\n    Name: \"Task 4\",\n    StartDate: new Date(Date.now() + 86400000),\n    DueDate: new Date(Date.now() + 86400000),\n  },\n  \"5\" : {\n    Id: \"5\",\n    Name: \"Task 5\",\n    StartDate: new Date(Date.now()),\n    DueDate: new Date(Date.now()),\n  },\n  \"6\" : {\n    Id: \"6\",\n    Name: \"Task 6\",\n    StartDate: new Date(Date.now() - 86400000),\n    DueDate: new Date(Date.now() - 86400000),\n  },\n  \"7\" : {\n    Id: \"7\",\n    Name: \"Task 7\",\n    StartDate: new Date(Date.now() + 25 * 86400000),\n    DueDate: new Date(Date.now() + 35 * 86400000),\n  },\n  \"8\" : {\n    Id: \"8\",\n    Name: \"Task 8\",\n    StartDate: new Date(Date.now() - 10 * 86400000),\n    DueDate: new Date(Date.now() - 5 * 86400000),\n  },\n};\n\nexport default store;\n","import { useState, useEffect } from \"react\";\n\nimport Slider from \"../Slider/Slider\";\nimport TimeAxis from \"../TimeAxis/TimeAxis\";\nimport Timeline from \"../Timeline/Timeline\";\nimport Spinner from \"../Spinner/Spinner\";\n\nimport {\n  DAY_WIDTH,\n  TASK_HEIGHT,\n} from \"../../constants/constants\";\n\n// import useStore from \"../../store/useStore\";\nimport {\nfetchStore,\nupdateStore\n} from \"../../store/useStore\";\n\nimport getStoreWithRow from \"../../helpers/getStoreWithRow\";\n\nimport MockDatabase from \"../../store/mock-database\";\n\nimport './App.css';\n\nfunction App() {\n  // TODO: useStore hook\n  const [store, setStore] = useState(null);\n  const [updateStoreWith, setUpdateStoreWith] = useState(null);\n\n  // Fetch\n  useEffect(() => {\n    let isMounted = true;\n    fetchStore().then(response => {\n      // Avoid updating state if the component unmounted before the fetch completes\n      if (!isMounted) {\n        return;\n      }\n      const data = response.result;\n      console.count(\"... Receive Data\");\n      console.log(data);\n      setStore(getStoreWithRow(data.Items));\n    }).catch(err => {\n      console.error(err);\n    });\n\n    return () => {\n      isMounted = false;\n    };\n  }, [])\n\n  // Update\n  useEffect(() => {\n    if (updateStoreWith === null) {\n      return;\n    };\n    // Has something to update\n    let isMounted = true;\n    updateStore(updateStoreWith).then(response => {\n      // Avoid updating state if the component unmounted before the fetch completes\n      if (!isMounted) {\n        return;\n      }\n      const data = response.result;\n      console.count(\"... Update Data\");\n      console.log(data);\n    }).then((_) => {\n      return fetchStore();\n    }).then(response => {\n      // Avoid updating state if the component unmounted before the fetch completes\n      if (!isMounted) {\n        return;\n      }\n      const data = response.result;\n      console.count(\"... Receive Data\");\n      console.log(data);\n      setStore(getStoreWithRow(data.Items));\n    }).catch(err => {\n      console.error(err);\n    });\n\n    return () => {\n      isMounted = false;\n    }\n  }, [updateStoreWith]);\n\n\n  const [fromDate, setFromDate] = useState(new Date(Date.now() - 7 * 86400000))\n\n  const topOrigin = 2 * TASK_HEIGHT;\n  const leftOrigin = 0;\n  // Get max number of slot in window\n  const windowWidth = window.innerWidth;\n  const maxSpread = Math.floor(windowWidth / DAY_WIDTH);\n\n  function editTask(task) {\n    // Do nothing if task not valid\n    if (!task.Id || !task.Name || !task.StartDate || !task.DueDate) {\n      return;\n    };\n\n    setUpdateStoreWith({...task});\n    setStore(null); // to avoid display false informaiton, have to be improved\n  }\n\n  return (\n    <div className=\"App\">\n      <Slider\n      previous={(_) => (setFromDate(new Date(fromDate.getTime() - 86400000)))}\n      next={(_) => (setFromDate(new Date(fromDate.getTime() + 86400000)))}\n      />\n      <TimeAxis\n        topOrigin={topOrigin}\n        leftOrigin={leftOrigin}\n        maxSpread={maxSpread}\n        dayWidth={DAY_WIDTH}\n        dayOrigin={fromDate}\n        height={TASK_HEIGHT}\n      />\n      {store !== null ?\n        <Timeline\n          fromDate={fromDate}\n          topOrigin={topOrigin + 2 * TASK_HEIGHT}\n          leftOrigin={leftOrigin}\n          maxSpread={maxSpread}\n          dayWidth={DAY_WIDTH}\n          taskHeigh={TASK_HEIGHT}\n          store={store}\n          editStoreTask={editTask}\n        /> :\n        <Spinner />\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}