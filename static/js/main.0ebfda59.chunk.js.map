{"version":3,"sources":["components/Slider/Slider.js","components/TimeAxis/TimeAxis.js","hooks/useMousePosition.js","components/TaskHandle/TaskHandle.js","components/Task/Task.js","components/EmptyTask/EmptyTask.js","components/TaskCreator/TaskCreator.js","constants/constants.js","helpers/getDaySpread.js","components/Timeline/Timeline.js","helpers/getStoreWithRow.js","store/mock-database.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["Slider","previous","next","_","className","onClick","e","preventDefault","stopPropagation","MONTH_MAP","TimeAxis","topOrigin","leftOrigin","maxSpread","dayWidth","dayOrigin","height","months","dates","Array","fill","forEach","item","i","currentDay","Date","getTime","push","style","top","left","width","getDate","getMonth","listeningCounter","eventTargets","listenTargets","positionHandler","clientX","clientY","updatePositionEvent","CustomEvent","detail","x","y","Object","values","dispatchEvent","mouseUpHandler","keys","key","useMousePosition","targetKey","EventTarget","useState","offset","setOffset","memoizedUpdatePositionHandler","useCallback","touchPoint","useEffect","window","addEventListener","removeEventListener","undefined","isListening","TaskHandle","handleKey","updateTaskHandle","setIsListening","onMouseDown","Task","name","absoluteTop","absoluteLeft","paddingLeft","taskKey","updateTask","updateTaskHandleSide","side","EmptyTask","setName","value","onChange","target","type","placeholder","TaskCreator","taskHeigh","createTask","offsetX","nativeEvent","offsetY","column","Math","floor","row","getDaySpread","dateA","dateB","fromDate","toDate","setUTCHours","setUTCMinutes","setUTCSeconds","setUTCMilliseconds","Timeline","mouseEvent","store","editStoreTask","emptyTask","setEmptyTask","editedTask","setEditedTask","timelineMap","localStoreMapInfo","tasks","placeTask","Template","dayOffset","StartDate","spread","DueDate","Id","Name","min","args","updateLocalTask","taskId","localTask","length","fromColumn","toColumn","currentRow","localColumn","max","localRow","columnShift","onMouseUp","validateEditedTask","now","validateEmptyTask","getStoreWithRow","storeWithRow","storeMap","isCollision","j","App","MockDatabase","localStore","setLocalStore","setFromDate","windowWidth","innerWidth","task","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ebfda59.chunk.js","sourcesContent":["// TODO: Center text vertically\n// TODO: CHange layout to add transparent padding\n\nimport './Slider.css';\n\nfunction Slider({previous, next}) {\n  previous = previous ?? ((_) => (undefined));\n  next = next ?? ((_) => (undefined));\n  \n  function previousDate(e) {\n    e.preventDefault();\n    e.stopPropagation();\n\n    previous();\n  };\n\n  function nextDate(e) {\n    e.preventDefault();\n    e.stopPropagation();\n\n    next();\n  };\n\n  return (\n    <div className=\"Slider\">\n      <button\n        onClick={previousDate}\n      >\n      <i className=\"arrow left\" />\n      </button>\n      <button\n        onClick={nextDate}\n      >\n      <i className=\"arrow right\" />\n      </button>\n    </div>\n  );\n}\n\nexport default Slider;\n","import './TimeAxis.css';\n\nconst MONTH_MAP = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\",\n]\n\nfunction TimeAxis({topOrigin, leftOrigin, maxSpread, dayWidth, dayOrigin, height}) {\n  const months = [];\n  const dates = [];\n\n  Array(maxSpread).fill(0).forEach((item, i) => {\n    // Get Date\n    const currentDay = new Date(dayOrigin.getTime() + i * 86400000)\n\n    // Add Date\n    dates.push(\n      <div\n        key={i}\n        className=\"time\"\n        style={{\n          top: topOrigin + height,\n          left: leftOrigin + dayWidth * i,\n          width: dayWidth,\n          height: height,\n        }}>\n        {currentDay.getDate()}\n      </div>\n    );\n\n    // Add Month\n    if (i === 0 || currentDay.getDate() === 1) {\n      months.push(\n        <div\n          key={i}\n          className=\"month\"\n          style={{\n            top: topOrigin,\n            left: leftOrigin + dayWidth * i,\n            width: dayWidth,\n            height: height,\n          }}>\n          {MONTH_MAP[currentDay.getMonth()]}\n        </div>\n      );\n    }\n  });\n\n  return (\n    <div className=\"TimeAxis\">\n      {months}\n      {dates}\n    </div>\n  );\n}\n\nexport default TimeAxis;\n","// TODO: Optmise handler to not update at every frame\n\nimport { useState, useEffect, useCallback } from \"react\";\n\n// import {\n//   MINIMUM_SQUARED_DETECTION_RADIUS\n// } from \"../constants/constants\"\n\nlet listeningCounter = 0;\nconst eventTargets = {};\nconst listenTargets = {};\n\nfunction positionHandler({clientX, clientY}) {\n  const updatePositionEvent = new CustomEvent(\"updateposition\", {detail: {x: clientX, y: clientY}})\n  Object.values(eventTargets).forEach((item, _) => {\n    item.dispatchEvent(updatePositionEvent);\n  });\n};\n\nfunction mouseUpHandler() {\n  Object.keys(listenTargets).forEach((key, _) => {\n    listenTargets[key] = false;\n  });\n};\n\n// function squaredDistance(pointA, pointB) {\n//   return ((pointA[0] - pointB[0]) ** 2 + (pointA[1] - pointB[1]) ** 2)\n// }\n\nfunction useMousePosition(targetKey) {\n  eventTargets[targetKey] = eventTargets[targetKey] ?? new EventTarget();\n  listenTargets[targetKey] = listenTargets[targetKey] ?? false;\n\n  // console.table(listenTargets);\n\n  const [offset, setOffset] = useState([0, 0]);\n\n  function setIsListening(isListening) {\n    listenTargets[targetKey] = isListening;\n  }\n\n  const memoizedUpdatePositionHandler = useCallback(\n    (e) => {\n      const touchPoint = [e.detail.x, e.detail.y]\n      if (listenTargets[targetKey]) {\n        setOffset(touchPoint);\n      };\n    },\n    [targetKey],\n  );\n\n  useEffect(() => {\n    // Attach global listener to window\n    if (listeningCounter === 0) {\n      window.addEventListener(\"mousemove\", positionHandler);\n      window.addEventListener(\"mouseup\", mouseUpHandler);\n    };\n    // Send update to local listener if any\n    eventTargets[targetKey].addEventListener(\"updateposition\", memoizedUpdatePositionHandler);\n\n    listeningCounter += 1; // How many component are listening to mouse position\n    return () => {\n      // Remove update to local listener if any\n      eventTargets[targetKey].removeEventListener(\"updateposition\", memoizedUpdatePositionHandler);\n\n      listeningCounter -= 1; // How many component are listening to mouse position\n\n      // Detach global listener to window\n      if (listeningCounter === 0) {\n        window.removeEventListener(\"mousemove\", positionHandler);\n        window.removeEventListener(\"mouseup\", mouseUpHandler);\n      };\n    };\n  }, [targetKey, memoizedUpdatePositionHandler]);\n\n  return [\n    listenTargets[targetKey] ? offset[0] : undefined,\n    listenTargets[targetKey] ? offset[1] : undefined,\n    setIsListening\n  ];\n}\n\nexport default useMousePosition;\n","import { useEffect } from \"react\";\n\nimport useMousePosition from \"../../hooks/useMousePosition\";\n\nimport './TaskHandle.css';\n\nfunction TaskHandle({width, height, handleKey, updateTaskHandle}) {\n  const [clientX, ,setIsListening] = useMousePosition(handleKey);\n  function handleMouseDown(e) {\n    setIsListening(true);\n  };\n\n  useEffect(() => {\n    updateTaskHandle(clientX)\n  }, [clientX, updateTaskHandle]);\n\n  return (\n    <div\n      onMouseDown={handleMouseDown}\n      className=\"TaskHandle\"\n      style={{\n        width: width,\n        height: height,\n      }}\n    >\n    </div>\n  );\n}\n\nexport default TaskHandle;\n","// TODO: Center text vertically\n// TODO: Change layout to add transparent padding\n\nimport { useEffect } from \"react\";\n\nimport TaskHandle from \"../TaskHandle/TaskHandle\";\n\nimport useMousePosition from \"../../hooks/useMousePosition\";\n\nimport './Task.css';\n\nfunction Task({name, absoluteTop, absoluteLeft, width, height, paddingLeft, taskKey, updateTask}) {\n  const [clientX, clientY,setIsListening] = useMousePosition(taskKey);\n\n  function handleMouseDown(e) {\n    setIsListening(true);\n  };\n\n  function updateTaskHandleSide(side, clientX) {\n    updateTask(side, clientX, 0);\n  };\n\n  useEffect(() => {\n    updateTask(\"all\", clientX, clientY);\n  }, [clientX, clientY, updateTask])\n\n  return (\n    <div\n      className=\"Task\"\n      style={{\n        top: absoluteTop,\n        left: absoluteLeft,\n        width: width,\n        height: height,\n      }}\n    >\n      <TaskHandle\n        handleKey={`${taskKey}:left`}\n        width={10}\n        height={height}\n        updateTaskHandle={(clientX) => (updateTaskHandleSide(\"left\", clientX))}\n      />\n      <div\n        className=\"text-container\"\n        onMouseDown={handleMouseDown}\n        style={{\n          \"padding-left\": paddingLeft, // NOTE: Trigger an error for no reason\n        }}\n      >\n      {name}\n      </div>\n      <TaskHandle\n        handleKey={`${taskKey}:right`}\n        width={10}\n        height={height}\n        updateTaskHandle={(clientX) => (updateTaskHandleSide(\"right\", clientX))}\n      />\n    </div>\n  );\n}\n\nexport default Task;\n","import './EmptyTask.css';\n\nfunction EmptyTask({name, absoluteTop, absoluteLeft, width, height, paddingLeft, setName}) {\n  function handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  function handleChange(e) {\n    e.preventDefault();\n    e.stopPropagation();\n\n    setName(e.target.value)\n  }\n  return (\n    <div\n      className=\"EmptyTask\"\n      onClick={handleClick}\n      style={{\n        top: absoluteTop,\n        left: absoluteLeft,\n        width: width,\n        height: height,\n        \"padding-left\": paddingLeft,\n      }}\n    >\n      <input\n        value={name}\n        onChange={handleChange}\n        type=\"text\"\n        placeholder=\"Write a task name\"\n      />\n    </div>\n  );\n}\n\nexport default EmptyTask;\n","import './TaskCreator.css';\n\nfunction TaskCreator({absoluteTop, absoluteLeft, width, height, dayWidth, taskHeigh, createTask}) {\n  function handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n\n    const offsetX = e.nativeEvent.offsetX;\n    const offsetY = e.nativeEvent.offsetY;\n\n    const column = Math.floor(offsetX / dayWidth);\n    const row = Math.floor(offsetY / taskHeigh);\n\n    createTask(column, row)\n  }\n\n  return (\n    <div\n    className=\"TaskCreator\"\n    onClick={handleClick}\n    style={{\n      top: absoluteTop,\n      left: absoluteLeft,\n      width: width,\n      height: height,\n    }}\n    >\n    </div>\n  );\n}\n\nexport default TaskCreator;\n","// TODO: To be set dynamically\n\n// Constant in pixel\n\n// For App\nexport const DAY_WIDTH = 80;\nexport const TASK_HEIGHT = 50;\n\n// For Timeline\nexport const EMPTY_TASK_MAX_SPREAD = 5;\nexport const DEPTH_LIMIT = 100;\n\n// For useMousePosition (don't work, maximum death update when trying to reduce the number of update ...)\nexport const MINIMUM_SQUARED_DETECTION_RADIUS = 100 ** 2;\n","// TODO: More resiliant day spread calculator for multiple timezone and change in day time\nfunction getDaySpread(dateA, dateB) {\n  const fromDate = new Date(dateA);\n  const toDate = new Date(dateB);\n  fromDate.setUTCHours(0);\n  fromDate.setUTCMinutes(0);\n  fromDate.setUTCSeconds(0);\n  fromDate.setUTCMilliseconds(0);\n\n  toDate.setUTCHours(0);\n  toDate.setUTCMinutes(0);\n  toDate.setUTCSeconds(0);\n  toDate.setUTCMilliseconds(0);\n  return Math.floor((toDate.getTime() - fromDate.getTime()) / 86400000);\n};\n\nexport default getDaySpread;\n","// TODO: Anchor point for Timeline with dynamic position\n// TODO: Get Dynamic Window width for TimeAxis (WINDOW_WIDTH)\n// NOTE: Dynamic Constant\nimport { useState } from \"react\";\n\nimport Task from \"../Task/Task\";\nimport EmptyTask from \"../EmptyTask/EmptyTask\";\nimport TaskCreator from \"../TaskCreator/TaskCreator\";\n\nimport './Timeline.css';\n\nimport {\n  EMPTY_TASK_MAX_SPREAD,\n} from \"../../constants/constants\"\n\n// Functions\nimport getDaySpread from \"../../helpers/getDaySpread\";\n\nfunction Timeline({mouseEvent, fromDate, topOrigin, leftOrigin, maxSpread, dayWidth, taskHeigh, store, editStoreTask}) {\n  editStoreTask = editStoreTask ?? ((_) => (undefined));\n\n  function handleMouseUp() {\n    validateEditedTask();\n    setEditedTask({});\n  };\n\n  // TODO: Both can be merged\n  const [emptyTask, setEmptyTask] = useState({});\n  const [editedTask, setEditedTask] = useState({});\n\n  const dayOrigin = new Date(fromDate.getTime());\n  const timelineMap = {};\n  const localStoreMapInfo = {}\n  const tasks = [];\n\n  store.forEach((item, _) => {\n    if (editedTask.Id === item.Id) {\n      placeTask(editedTask, Task);\n    } else {\n      placeTask(item, Task);\n    };\n  });\n  if (emptyTask.StartDate && emptyTask.DueDate) {\n    placeTask(emptyTask, EmptyTask);\n  };\n\n  function placeTask(item, Template) {\n    // Get offset and spread\n    const dayOffset = getDaySpread(dayOrigin, item.StartDate);\n    const spread = getDaySpread(item.StartDate, item.DueDate) + 1;\n\n    let row = item.row, column = dayOffset;\n\n    // Populate map\n    for (let i = 0; i < spread; i++) {\n      timelineMap[`${column + i}:${row}`] = item.Id;\n    };\n    localStoreMapInfo[item.Id] = {\n      column: column,\n      row: row,\n      spread: spread,\n    };\n    // Add tasks\n    if (column + spread - 1 >= 0 && column < maxSpread) {\n\n      tasks.push(\n        <Template\n          taskKey={`Task-${item.Id}`}\n          key={`${column}-${row}`}\n          name={item.Name}\n          absoluteTop={topOrigin + taskHeigh * row}\n          absoluteLeft={leftOrigin + dayWidth * column}\n          width={dayWidth * spread}\n          height={taskHeigh}\n          paddingLeft={-Math.min(column, 0) * dayWidth}\n          setName={(value) => (setEmptyTask({...emptyTask, Name:value}))}\n          updateTask={(...args) => (updateLocalTask(item.Id, ...args))}\n        />\n      );\n    };\n  }\n\n  function validateEditedTask() {\n    // Only validate if task exist\n    if (!editedTask.Id || !editedTask.Name || !editedTask.StartDate || !editedTask.DueDate) {\n      return;\n    };\n\n    editStoreTask({...editedTask});\n  }\n\n  function validateEmptyTask() {\n    // Only validate if task exist\n    if (!emptyTask.Name || !emptyTask.StartDate || !emptyTask.DueDate) {\n      return;\n    };\n\n    const taskId = Date.now()\n    editStoreTask({...emptyTask, Id: taskId});\n  }\n\n  function createTask(column, row) {\n    // Just remove if already there\n    if (emptyTask.StartDate && emptyTask.DueDate) {\n      validateEmptyTask()\n      setEmptyTask({});\n      return;\n    };\n    let i = 0\n    for (i = 0; i < EMPTY_TASK_MAX_SPREAD; i++) {\n      if (timelineMap[`${column + i}:${row}`]) {\n        break\n      };\n    };\n    // Impossible to spawn new task here\n    if (i === 0) {\n      return;\n    };\n\n    setEmptyTask({\n      Name: \"\",\n      StartDate: new Date(dayOrigin.getTime() + column * 86400000),\n      DueDate: new Date(dayOrigin.getTime() + (column + i - 1) * 86400000),\n      row: row,\n    });\n  }\n\n  function updateLocalTask(taskId, side, clientX, clientY) {\n    if (!taskId || !side || (!clientX && !clientY)) {\n      return;\n    }\n    let localTask;\n    if (editedTask.Id === taskId) {\n      localTask = {...editedTask};\n    } else {\n      for (let i = 0; i < store.length; i++) {\n        if (store[i].Id === taskId) {\n          localTask = {...store[i]}\n          break;\n        };\n      };\n    };\n    const fromColumn = localStoreMapInfo[taskId].column;\n    const toColumn = localStoreMapInfo[taskId].column + localStoreMapInfo[taskId].spread - 1;\n    const currentRow = localStoreMapInfo[taskId].row;\n\n    if (side === \"left\") {\n      const localColumn = Math.floor((clientX - leftOrigin - dayWidth / 2) / dayWidth);\n      if (localColumn > toColumn) {\n        return;\n      }\n      for (let i = Math.min(localColumn, fromColumn); i <= Math.max(localColumn, fromColumn); i++) {\n        if (timelineMap[`${i}:${currentRow}`] && timelineMap[`${i}:${currentRow}`] !== taskId) {\n          return;\n        };\n      };\n      setEditedTask({\n        ...localTask,\n        StartDate: new Date(localTask.StartDate.getTime() + (localColumn - fromColumn) * 86400000),\n      });\n\n    } else if (side === \"right\") {\n      const localColumn = Math.floor((clientX - leftOrigin - dayWidth / 2) / dayWidth);\n      if (localColumn < fromColumn) {\n        return;\n      }\n      for (let i = Math.min(localColumn, toColumn); i <= Math.max(localColumn, toColumn); i++) {\n        if (timelineMap[`${i}:${currentRow}`] && timelineMap[`${i}:${currentRow}`] !== taskId) {\n          return;\n        };\n      };\n      setEditedTask({\n        ...localTask,\n        DueDate: new Date(localTask.DueDate.getTime() + (localColumn - toColumn) * 86400000),\n      });\n\n    } else if (side === \"all\") {\n      const localColumn = Math.floor((clientX - leftOrigin) / dayWidth);\n      const localRow = Math.floor((clientY - topOrigin) / taskHeigh);\n      const columnShift = Math.floor(localColumn - (toColumn + fromColumn) / 2);\n      if (localRow < 0 || columnShift === 0) {\n        return;\n      };\n      // Grab alway is the middle for now\n\n      for (let i = fromColumn + columnShift; i <= toColumn + columnShift; i++) {\n        if (timelineMap[`${i}:${localRow}`] && timelineMap[`${i}:${localRow}`] !== taskId) {\n          return;\n        };\n      };\n      setEditedTask({\n        ...localTask,\n        StartDate: new Date(localTask.StartDate.getTime() + columnShift * 86400000),\n        DueDate: new Date(localTask.DueDate.getTime() + columnShift * 86400000),\n        row: localRow,\n      });\n    };\n\n    return;\n  };\n\n  return (\n    <div\n      onMouseUp={handleMouseUp}\n      className=\"Timeline\"\n    >\n      <TaskCreator\n        absoluteTop={topOrigin}\n        absoluteLeft={leftOrigin}\n        width={dayWidth * maxSpread}\n        dayWidth={dayWidth}\n        taskHeigh={taskHeigh}\n        createTask={createTask}\n      />\n      {tasks}\n    </div>\n  );\n}\n\nexport default Timeline;\n","import getDaySpread from \"./getDaySpread\";\n\nimport {\n  DEPTH_LIMIT,\n} from \"../constants/constants\"\n\nfunction getStoreWithRow(store) {\n  const storeWithRow = {};\n\n  const storeMap = {};\n\n  Object.values(store).forEach((item, i) => {\n    // Get offset and spread\n    const dayOffset = getDaySpread(new Date(), item.StartDate);\n    const spread = getDaySpread(item.StartDate, item.DueDate) + 1;\n\n    let row = -1, column = dayOffset;\n    if (item.row) {\n      // Check for collision\n      let isCollision = false;\n      for (let i = 0; i < spread; i++) {\n        if (storeMap[`${column + i}:${item.row}`]) {\n          isCollision = true;\n          break;\n        };\n      };\n      if (!isCollision) {\n        row = item.row;\n      };\n    };\n\n    // Not set yet\n    if (row === -1) {\n      // Find no collision\n      let j = 0;\n      let isCollision = false;\n      do {\n        isCollision = false;\n        for (let i = 0; i < spread; i++) {\n          if (storeMap[`${column + i}:${j}`]) {\n            isCollision = true;\n            break;\n          };\n        };\n        j += 1;\n      } while (isCollision && j < DEPTH_LIMIT)\n      row = j- 1;\n    };\n\n    // Populate map\n    for (let i = 0; i < spread; i++) {\n      storeMap[`${column + i}:${row}`] = item.Id;\n    };\n\n    // Populate store with row\n    storeWithRow[item.Id] = {\n      ...item,\n      row: row,\n    };\n  });\n\n  return storeWithRow;\n};\n\nexport default getStoreWithRow;\n","const store =  {\n  \"1\" : {\n    Id: \"1\",\n    Name: \"Task 1\",\n    StartDate: new Date(Date.now() - 2 * 86400000),\n    DueDate: new Date(Date.now() + 86400000),\n  },\n  \"2\" : {\n    Id: \"2\",\n    Name: \"Task 2\",\n    StartDate: new Date(Date.now() - 86400000),\n    DueDate: new Date(Date.now() + 2 * 86400000),\n  },\n  \"3\" : {\n    Id: \"3\",\n    Name: \"Task 3\",\n    StartDate: new Date(Date.now() - 86400000),\n    DueDate: new Date(Date.now() + 86400000),\n  },\n  \"4\" : {\n    Id: \"4\",\n    Name: \"Task 4\",\n    StartDate: new Date(Date.now() + 86400000),\n    DueDate: new Date(Date.now() + 86400000),\n  },\n  \"5\" : {\n    Id: \"5\",\n    Name: \"Task 5\",\n    StartDate: new Date(Date.now()),\n    DueDate: new Date(Date.now()),\n  },\n  \"6\" : {\n    Id: \"6\",\n    Name: \"Task 6\",\n    StartDate: new Date(Date.now() - 86400000),\n    DueDate: new Date(Date.now() - 86400000),\n  },\n  \"7\" : {\n    Id: \"7\",\n    Name: \"Task 7\",\n    StartDate: new Date(Date.now() + 25 * 86400000),\n    DueDate: new Date(Date.now() + 35 * 86400000),\n  },\n  \"8\" : {\n    Id: \"8\",\n    Name: \"Task 8\",\n    StartDate: new Date(Date.now() - 10 * 86400000),\n    DueDate: new Date(Date.now() - 5 * 86400000),\n  },\n};\n\nexport default store;\n","import { useState } from \"react\";\n\nimport Slider from \"../Slider/Slider\";\nimport TimeAxis from \"../TimeAxis/TimeAxis\";\nimport Timeline from \"../Timeline/Timeline\";\n\nimport {\n  DAY_WIDTH,\n  TASK_HEIGHT,\n} from \"../../constants/constants\"\n\nimport getStoreWithRow from \"../../helpers/getStoreWithRow\";\n\nimport MockDatabase from \"../../store/mock-database\";\n\nimport './App.css';\n\nfunction App() {\n  // localStore to be remove if use real endpoint\n  const [localStore, setLocalStore] = useState(getStoreWithRow(MockDatabase));\n\n  const [fromDate, setFromDate] = useState(new Date(Date.now() - 7 * 86400000))\n\n  const topOrigin = 2 * TASK_HEIGHT;\n  const leftOrigin = 0;\n  // Get max number of slot in window\n  const windowWidth = window.innerWidth;\n  const maxSpread = Math.floor(windowWidth / DAY_WIDTH);\n\n  function editTask(task) {\n    // Do nothing if task not valid\n    if (!task.Id || !task.Name || !task.StartDate || !task.DueDate) {\n      return;\n    };\n\n    setLocalStore({\n      ...localStore,\n      [task.Id]: {...task},\n    });\n  }\n\n  return (\n    <div className=\"App\">\n      <Slider\n      previous={(_) => (setFromDate(new Date(fromDate.getTime() - 86400000)))}\n      next={(_) => (setFromDate(new Date(fromDate.getTime() + 86400000)))}\n      />\n      <TimeAxis\n        topOrigin={topOrigin}\n        leftOrigin={leftOrigin}\n        maxSpread={maxSpread}\n        dayWidth={DAY_WIDTH}\n        dayOrigin={fromDate}\n        height={TASK_HEIGHT}\n      />\n      <Timeline\n        fromDate={fromDate}\n        topOrigin={topOrigin + 2 * TASK_HEIGHT}\n        leftOrigin={leftOrigin}\n        maxSpread={maxSpread}\n        dayWidth={DAY_WIDTH}\n        taskHeigh={TASK_HEIGHT}\n        store={Object.values(localStore)}\n        editStoreTask={editTask}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}